<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>How to Debug Your Node.js Application on OpenShift with Chrome DevTools</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/LqL3idzi940/" /><category term="JavaScript" /><category term="Node.js" /><category term="Red Hat OpenShift Application Runtimes" /><category term="Red Hat OpenShift Container Platform" /><category term="chrome" /><category term="express" /><category term="Javascript" /><category term="Red Hat OpenShift" /><category term="RHOAR" /><author><name>Lucas Holmquist</name></author><id>https://developers.redhat.com/blog/?p=491427</id><updated>2018-05-15T17:00:15Z</updated><published>2018-05-15T17:00:15Z</published><content type="html">&lt;p&gt;Recently, I wrote a post called &lt;a href="https://developers.redhat.com/blog/2018/04/16/zero-express-openshift-3-commands/"&gt;Zero to Express on OpenShift in Three Commands,&lt;/a&gt; which shows how to get started using Node.js, Express, and OpenShift together as fast as possible using the Node.js s2i (source-to-image) images that were recently released as part of &lt;a href="https://developers.redhat.com/blog/2018/03/12/rhoar-nodejs-annoucement/" target="_blank" rel="noopener"&gt;Red Hat OpenShift Application Runtimes&lt;/a&gt; (RHOAR).&lt;/p&gt; &lt;p&gt;This post will add to the last one and show how we can start to debug and inspect our running code using the Chrome Developer Tools (DevTools) inspector.&lt;/p&gt; &lt;p&gt;&lt;span id="more-491427"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h3&gt;Getting Started&lt;/h3&gt; &lt;p&gt;As in the previous post, there are some required prerequisites. You need to have &lt;a href="https://nodejs.org" target="_blank" rel="noopener"&gt;Node 8.x&lt;/a&gt; and &lt;a href="https://www.npmjs.com/" target="_blank" rel="noopener"&gt;npm 5.2 &lt;/a&gt; or greater installed. npm comes with the official node distribution, so if you install Node from &lt;a href="https://nodejs.org" target="_blank" rel="noopener"&gt;Nodejs.org&lt;/a&gt;, you should be good.&lt;/p&gt; &lt;p&gt;You&amp;#8217;ll also need access to an OpenShift environment or the Red Hat Container Development Kit (CDK) minishift environment. For this example, I&amp;#8217;ll be using minishift. You can find instructions on getting minishift up and running &lt;a href="https://developers.redhat.com/products/cdk/hello-world/" target="_blank" rel="noopener"&gt;here&lt;/a&gt;. For my local minishift, I start it with this command:&lt;/p&gt; &lt;pre&gt;$ minishift start --memory=6144 --vm-driver virtualbox&lt;/pre&gt; &lt;p&gt;And of course, you will need to have the Chrome browser installed. You can &lt;a href="https://www.google.com/chrome/" target="_blank" rel="noopener"&gt;get that here&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;First Steps&lt;/h3&gt; &lt;p&gt;Before we start trying to debug our application on OpenShift, let&amp;#8217;s first go over how we do this locally. If you are already familiar with how this works, then feel free to skip to the next section.&lt;/p&gt; &lt;h4&gt;Getting the Application&lt;/h4&gt; &lt;p&gt;The app we created in the previous post was a generic app skeleton, so let&amp;#8217;s use something that is a little more useful. We are going to use the &lt;a href="https://github.com/bucharest-gold/nodejs-rest-http" target="_blank" rel="noopener"&gt;REST API Level 0 example&lt;/a&gt;, which is one of the boosters from RHOAR.&lt;/p&gt; &lt;p&gt;Clone the repo:&lt;/p&gt; &lt;pre&gt;$ git clone https://github.com/bucharest-gold/nodejs-rest-http&lt;/pre&gt; &lt;p&gt;Change to the directory:&lt;/p&gt; &lt;pre&gt;$ cd nodejs-rest-http&lt;/pre&gt; &lt;p&gt;Install the dependencies:&lt;/p&gt; &lt;pre&gt;$ npm install&lt;/pre&gt; &lt;p&gt;Run the application:&lt;/p&gt; &lt;pre&gt;$ npm run start&lt;/pre&gt; &lt;p&gt;The application should then be running at &lt;code&gt;localhost:8080&lt;/code&gt; and look something like this:&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-large wp-image-492477 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-level0-1024x534.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-level0-1024x534.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-level0-1024x534.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-level0-300x156.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-level0-768x400.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-level0.png 1391w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt; &lt;p&gt;It is a pretty basic Hello World REST application.&lt;/p&gt; &lt;p&gt;Let&amp;#8217;s see what that &lt;code&gt;npm run start&lt;/code&gt; is doing. In our &lt;code&gt;package.json&lt;/code&gt; file, in the &lt;code&gt;scripts&lt;/code&gt; section, we can see this:&lt;/p&gt; &lt;pre&gt;// package.json { "name": "nodejs-rest-http", .... "scripts": { .... "start": "node ." }, "main": "./bin/www", .... } &lt;/pre&gt; &lt;p&gt;&lt;code&gt;start&lt;/code&gt; just calls &lt;code&gt;node&lt;/code&gt; and because there is also a &lt;code&gt;main&lt;/code&gt; property, it will use that as the entry point.&lt;/p&gt; &lt;p&gt;So really, &lt;code&gt;npm run start&lt;/code&gt; is the same as &lt;code&gt;node ./bin/www&lt;/code&gt;.&lt;/p&gt; &lt;h4&gt;Debugging Locally&lt;/h4&gt; &lt;p&gt;Now let&amp;#8217;s start the application again, but this time we want to be able to inspect the code in Chrome DevTools.&lt;/p&gt; &lt;p&gt;This time, we are going to start the application like this:&lt;/p&gt; &lt;pre&gt;$ node --inspect ./bin/www&lt;/pre&gt; &lt;p&gt;After running that command, you should see something like this:&lt;/p&gt; &lt;pre&gt;Debugger listening on ws://127.0.0.1:9229/9f332ec3-f7e9-4558-a67d-3ef8d13947cc For help, see: https://nodejs.org/en/docs/inspector &lt;/pre&gt; &lt;p&gt;Now, open Chrome and type &lt;code&gt;chrome://inspect&lt;/code&gt;Â into the address bar. You should see something similar to this:&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-large wp-image-493417 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-inspect-local-1024x309.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-inspect-local-1024x309.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-inspect-local-1024x309.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-inspect-local-300x91.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-inspect-local-768x232.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-inspect-local.png 1040w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt; &lt;p&gt;Then click the &lt;code&gt;inspect&lt;/code&gt; link, which will open up the Chrome DevTools window. It will look something like this:&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-large wp-image-493427 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-dev-tools-local-1024x581.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-dev-tools-local-1024x581.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-dev-tools-local-1024x581.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-dev-tools-local-300x170.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-dev-tools-local-768x436.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-dev-tools-local.png 1253w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt; &lt;p&gt;We can see there are many files we can access. We don&amp;#8217;t really need to worry about those, because those files are loaded when the node process starts. We are interested in the &lt;code&gt;app.js&lt;/code&gt; file.&lt;/p&gt; &lt;p&gt;Let&amp;#8217;s set a break point so we can inspect the REST API when we call it.&lt;/p&gt; &lt;p&gt;To set a break point, just click the line number on the left side gutter. Let&amp;#8217;s set the break point on line 34.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-large wp-image-493467 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-dev-tools-breakpoint-local-1024x580.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-dev-tools-breakpoint-local-1024x580.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-dev-tools-breakpoint-local-1024x580.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-dev-tools-breakpoint-local-300x170.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-dev-tools-breakpoint-local-768x435.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-dev-tools-breakpoint-local.png 1252w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt; &lt;p&gt;Switch over to the examples UI, which is running on &lt;code&gt;http://localhost:8080/&lt;/code&gt;, type something in the name field, and click the &lt;strong&gt;Invoke&lt;/strong&gt; button.&lt;/p&gt; &lt;p&gt;The inspector window should take focus, and execution should be paused on the break point we set.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-large wp-image-493477 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-dev-tools-paused-local-1024x577.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-dev-tools-paused-local-1024x577.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-dev-tools-paused-local-1024x577.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-dev-tools-paused-local-300x169.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-dev-tools-paused-local-768x433.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-dev-tools-paused-local.png 1260w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt; &lt;p&gt;I&amp;#8217;m not going to go into all the things you can inspect here, because it is similar to any source code debugger.&lt;/p&gt; &lt;h3&gt;OpenShift&lt;/h3&gt; &lt;p&gt;Now that we see how to connect to the debugger with our app running locally, let&amp;#8217;s see how we can connect to our app when it is running on OpenShift.&lt;/p&gt; &lt;p&gt;First, we need to get our application on an OpenShift cluster. As I said earlier, I will be using minishift so I can run OpenShift on my local computer.&lt;/p&gt; &lt;p&gt;Once you have that running, make sure you are logged in (I use developer/developer), and create a new project for deploying our application:&lt;/p&gt; &lt;pre&gt;$ oc login&lt;/pre&gt; &lt;pre&gt;$ oc new-project node-debug-example&lt;/pre&gt; &lt;h4&gt;Deploy to OpenShift&lt;/h4&gt; &lt;p&gt;To deploy our application, run this:&lt;/p&gt; &lt;pre&gt;$npm run openshift&lt;/pre&gt; &lt;p&gt;The &lt;code&gt;openshift&lt;/code&gt; npm script uses a module called &lt;a href="https://www.npmjs.com/package/nodeshift" target="_blank" rel="noopener"&gt;Nodeshift&lt;/a&gt; to do all the heavy lifting of deploying to OpenShift.&lt;/p&gt; &lt;p&gt;Your console output should look similar to this:&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-large wp-image-493747 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/05/npm-run-openshift-1024x592.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/05/npm-run-openshift-1024x592.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/05/npm-run-openshift-1024x592.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/npm-run-openshift-300x173.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/npm-run-openshift-768x444.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/npm-run-openshift.png 1102w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt; &lt;p&gt;This post won&amp;#8217;t go into how Nodeshift works, but keep on eye out for a post on Nodeshift in the near future.&lt;/p&gt; &lt;p&gt;If you also navigate to the OpenShift console (mine is at &lt;code&gt;https://192.168.99.100:8443/console/&lt;/code&gt;)Â and click your project (&lt;code&gt;node-debug-example&lt;/code&gt;), you should see your deployed application:&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-large wp-image-493757 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-deployed-1024x588.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-deployed-1024x588.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-deployed-1024x588.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-deployed-300x172.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-deployed-768x441.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-deployed.png 1508w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt; &lt;p&gt;Clicking the URL, will bring you to your application, which shouldn&amp;#8217;t look any different than what we saw when we ran it locally.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-large wp-image-493767 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-level0-openshift-1024x665.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-level0-openshift-1024x665.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-level0-openshift-1024x665.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-level0-openshift-300x195.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-level0-openshift-768x499.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-level0-openshift.png 1337w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt; &lt;p&gt;Back on the main Overview page, click inside the blue circle. This will bring you to the actual pod our application is running in. Then click the &lt;strong&gt;Logs&lt;/strong&gt; tab.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-large wp-image-493777 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-pod-log-openshift-1024x573.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-pod-log-openshift-1024x573.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-pod-log-openshift-1024x573.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-pod-log-openshift-300x168.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-pod-log-openshift-768x430.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-pod-log-openshift.png 1287w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt; &lt;p&gt;We can see that our application is running, and there is a &lt;code&gt;DEBUG_PORT&lt;/code&gt; environment variable set with the value of 5858, but the application wasn&amp;#8217;t started with the &lt;code&gt;--inspect&lt;/code&gt; flag because, by default, the &lt;code&gt;NODE_ENV&lt;/code&gt; environment variable is set to &lt;code&gt;production&lt;/code&gt;.&lt;/p&gt; &lt;h4&gt;Debugging On OpenShift&lt;/h4&gt; &lt;p&gt;We are going to need to deploy our application in &amp;#8220;development&amp;#8221; mode. There are couple ways to do it. I&amp;#8217;m going to use the console UI to add an environment variable to our deployment config.&lt;/p&gt; &lt;p&gt;If you click back to the &lt;strong&gt;Overview&lt;/strong&gt; screen and then click the deployment name (&lt;code&gt;nodejs-rest-http&lt;/code&gt;), you will then be on the deployment screen.&lt;/p&gt; &lt;p&gt;Navigate to the &lt;strong&gt;Environment&lt;/strong&gt; tab. This is where we will add a new environment variable called &lt;code&gt;NODE_ENV&lt;/code&gt; with a value of &lt;code&gt;development&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-large wp-image-493787 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-node-env-1024x259.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-node-env-1024x259.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-node-env-1024x259.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-node-env-300x76.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-node-env-768x194.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-node-env.png 1299w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt; &lt;p&gt;Setting that new variable will trigger a new deployment.&lt;/p&gt; &lt;p&gt;It might take a little longer for this deployment to become active, because we are now actually installing all the development dependencies from &lt;code&gt;package.json&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;If we click into the pod like we did before and look at the log, we can see the &lt;code&gt;npm install&lt;/code&gt;Â activity happening.&lt;/p&gt; &lt;p&gt;Our node application will now be started by &lt;a href="https://nodemon.io/" target="_blank" rel="noopener"&gt;Nodemon&lt;/a&gt;, which isn&amp;#8217;t really important for this post.&lt;/p&gt; &lt;p&gt;Now we can see that the node process was started with the &lt;code&gt;--inspect&lt;/code&gt; flag and the debugger is listening on 127.0.0.1.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-large wp-image-493797 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-pod-log-dev-1024x574.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-pod-log-dev-1024x574.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-pod-log-dev-1024x574.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-pod-log-dev-300x168.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-pod-log-dev-768x431.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-pod-log-dev.png 1298w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt; &lt;h4&gt;Port Forwarding&lt;/h4&gt; &lt;p&gt;But that is local to that pod, so how do we connect DevTools to that? We use the &lt;code&gt;oc port-forward&lt;/code&gt; command:&lt;/p&gt; &lt;pre&gt;$ oc port-forward $(oc get po | grep nodejs-rest-http | grep Running | awk '{print $1}') 8888:5858&lt;/pre&gt; &lt;p&gt;There is a lot going on here, so let&amp;#8217;s break it down.&lt;/p&gt; &lt;p&gt;&lt;code&gt;port-forward&lt;/code&gt; needs a pod name, which is what is inside that &lt;code&gt;$()&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;code&gt;oc get po&lt;/code&gt; will get the pods.&lt;/p&gt; &lt;p&gt;&lt;code&gt;grep nodejs-rest-http&lt;/code&gt; will show only pods that have &lt;code&gt;nodejs-rest-http&lt;/code&gt; in that row.&lt;/p&gt; &lt;p&gt;&lt;code&gt;grep Running&lt;/code&gt; will filter the list to show only running pods.&lt;/p&gt; &lt;p&gt;That &lt;code&gt;awk&lt;/code&gt; statement will then output the first column of those &lt;code&gt;grep&lt;/code&gt; searches, which in this case is the pod name: something like &lt;code&gt;nodejs-rest-http-3-fzgk4&lt;/code&gt;. That mess of characters at the end changes during each deployment, so that is why we do that little statement.&lt;/p&gt; &lt;p&gt;The last bit,Â &lt;code&gt;8888:5858&lt;/code&gt;, says we are going to listen locally (your computer) on port 8888 and then forward those requests to port 5858 (on OpenShift).&lt;/p&gt; &lt;p&gt;So as before, go to &lt;code&gt;chrome://inspect&lt;/code&gt;, but this time we need to add &lt;code&gt;127.0.0.1:8888&lt;/code&gt; so we can connect. Click the &lt;strong&gt;configure&lt;/strong&gt; button and add those values:&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-large wp-image-493817 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-inspect-configure-1024x538.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-inspect-configure-1024x538.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-inspect-configure-1024x538.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-inspect-configure-300x158.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-inspect-configure-768x404.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-inspect-configure.png 1282w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt; &lt;p&gt;Now there should be a remote target with an &lt;code&gt;inspect&lt;/code&gt; link:&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-large wp-image-493827 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-inspect-remote-1024x624.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-inspect-remote-1024x624.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-inspect-remote-1024x624.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-inspect-remote-300x183.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-inspect-remote-768x468.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-inspect-remote.png 1114w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt; &lt;p&gt;Once you click that &lt;code&gt;inspect&lt;/code&gt; link, you can start to inspect and debug your application as we did in the local example.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-large wp-image-493837 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-dev-tools-remote-1024x578.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-dev-tools-remote-1024x578.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-dev-tools-remote-1024x578.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-dev-tools-remote-300x169.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-dev-tools-remote-768x434.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/chrome-dev-tools-remote.png 1252w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt; &lt;h3&gt;A Quick Note&lt;/h3&gt; &lt;p&gt;If you notice that your &amp;#8220;greeting&amp;#8221; endpoint is getting called without you interacting with it, that is normal. This application has a readiness and liveness probe that is pointing at that endpoint.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-large wp-image-493847 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-probes.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-probes.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-probes.png 633w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/nodejs-rest-http-probes-300x134.png 300w" sizes="(max-width: 633px) 100vw, 633px" /&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note:Â &lt;/strong&gt;In this example, we were using the 10.x community s2i images which are &lt;a href="https://hub.docker.com/r/bucharestgold/centos7-s2i-nodejs/tags/" target="_blank" rel="noopener"&gt;located here&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;To use a fully supported version of Node.js on OpenShift, all you need is to add the &lt;code&gt;--dockerImage&lt;/code&gt; flag.&lt;/p&gt; &lt;p&gt;This will integrate the Red Hat OpenShift Application Runtimes version of Node.js (8.x), for which you can get full production and developer support as part of our product subscription.&lt;/p&gt; &lt;p&gt;This might look something like this:&lt;/p&gt; &lt;pre&gt;// package.json { "name": "nodejs-rest-http", .... "scripts": { .... "openshift": "nodeshift --strictSSL=false --dockerImage=registry.access.redhat.com/rhoar-nodejs/nodejs-8" }, .... } &lt;/pre&gt; &lt;h3&gt;Recap&lt;/h3&gt; &lt;p&gt;While we used a pretty simple application for the example, this post shows the minimal setup that is required to start debugging your applications that are running on OpenShift.&lt;/p&gt; &lt;h3&gt;Further Reading&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://www.npmjs.com/package/nodeshift" target="_blank" rel="noopener"&gt;Nodeshift&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://docs.openshift.org/latest/minishift/index.html" target="_blank" rel="noopener"&gt;Minishift Documentation&lt;/a&gt;Â / &lt;a href="https://developers.redhat.com/products/cdk/docs-and-apis/"&gt;Red Hat Container Development Kit Documentation&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://nodejs.org/en/docs/inspector" target="_blank" rel="noopener"&gt;Node.js inspect flag&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/03/12/rhoar-nodejs-annoucement/" target="_blank" rel="noopener"&gt;Red Hat OpenShift Application Runtimes (RHOAR)&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F15%2Fdebug-your-node-js-application-on-openshift-with-chrome-devtools%2F&amp;#38;linkname=How%20to%20Debug%20Your%20Node.js%20Application%20on%20OpenShift%20with%20Chrome%20DevTools" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F15%2Fdebug-your-node-js-application-on-openshift-with-chrome-devtools%2F&amp;#38;linkname=How%20to%20Debug%20Your%20Node.js%20Application%20on%20OpenShift%20with%20Chrome%20DevTools" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F15%2Fdebug-your-node-js-application-on-openshift-with-chrome-devtools%2F&amp;#38;linkname=How%20to%20Debug%20Your%20Node.js%20Application%20on%20OpenShift%20with%20Chrome%20DevTools" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F15%2Fdebug-your-node-js-application-on-openshift-with-chrome-devtools%2F&amp;#38;linkname=How%20to%20Debug%20Your%20Node.js%20Application%20on%20OpenShift%20with%20Chrome%20DevTools" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F15%2Fdebug-your-node-js-application-on-openshift-with-chrome-devtools%2F&amp;#38;linkname=How%20to%20Debug%20Your%20Node.js%20Application%20on%20OpenShift%20with%20Chrome%20DevTools" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F15%2Fdebug-your-node-js-application-on-openshift-with-chrome-devtools%2F&amp;#38;linkname=How%20to%20Debug%20Your%20Node.js%20Application%20on%20OpenShift%20with%20Chrome%20DevTools" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F15%2Fdebug-your-node-js-application-on-openshift-with-chrome-devtools%2F&amp;#38;linkname=How%20to%20Debug%20Your%20Node.js%20Application%20on%20OpenShift%20with%20Chrome%20DevTools" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F15%2Fdebug-your-node-js-application-on-openshift-with-chrome-devtools%2F&amp;#38;linkname=How%20to%20Debug%20Your%20Node.js%20Application%20on%20OpenShift%20with%20Chrome%20DevTools" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F15%2Fdebug-your-node-js-application-on-openshift-with-chrome-devtools%2F&amp;#38;title=How%20to%20Debug%20Your%20Node.js%20Application%20on%20OpenShift%20with%20Chrome%20DevTools" data-a2a-url="https://developers.redhat.com/blog/2018/05/15/debug-your-node-js-application-on-openshift-with-chrome-devtools/" data-a2a-title="How to Debug Your Node.js Application on OpenShift with Chrome DevTools"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/05/15/debug-your-node-js-application-on-openshift-with-chrome-devtools/"&gt;How to Debug Your Node.js Application on OpenShift with Chrome DevTools&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/LqL3idzi940" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Recently, I wrote a post called Zero to Express on OpenShift in Three Commands, which shows how to get started using Node.js, Express, and OpenShift together as fast as possible using the Node.js s2i (source-to-image) images that were recently released as part of Red Hat OpenShift Application Runtimes (RHOAR). This post will add to the [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/05/15/debug-your-node-js-application-on-openshift-with-chrome-devtools/"&gt;How to Debug Your Node.js Application on OpenShift with Chrome DevTools&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/05/15/debug-your-node-js-application-on-openshift-with-chrome-devtools/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">491427</post-id><dc:creator>Lucas Holmquist</dc:creator><dc:date>2018-05-15T17:00:15Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/05/15/debug-your-node-js-application-on-openshift-with-chrome-devtools/</feedburner:origLink></entry><entry><title>Watch over 100 Red Hat Summit 2018 session videos online</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/MCiDlqMhw7k/" /><category term="Red Hat Summit" /><category term="Interview" /><category term="red hat summit" /><category term="Red Hat Summit 2018" /><category term="video" /><author><name>Rob Terzi</name></author><id>https://developers.redhat.com/blog/?p=494317</id><updated>2018-05-15T11:00:55Z</updated><published>2018-05-15T11:00:55Z</published><content type="html">&lt;p&gt;Over &lt;a href="https://www.youtube.com/playlist?list=PLEGSLwUsxfEgT4XEohmRe_JB6MBnmLfBh"&gt;100 breakout sessions from Red Hat Summit 2018&lt;/a&gt; are now available to watch on YouTube. Even if you were at Summit, there were too many sessions to attend all of the ones you might have wanted to see. All of the recorded sessions are in one big searchable YouTube playlist. In the next few weeks, a number of the developer sessions will be highlighted on this blog by topic.&lt;/p&gt; &lt;p&gt;To get a development-oriented overview of what happened at Red Hat Summit, watch these TheCube.net interviews with:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=aJ6HzIJ6YSc"&gt;Craig Muzilla &amp;#8211; SVP of Red Hat Application Platforms business unit&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=CEejRTJHPc4"&gt;Harry Mower &amp;#8211; senior director, Red Hat Developer Programs&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=EkPMaq-FmqA"&gt;Chris Wright &amp;#8211; VP and chief technology officer, Red Hat&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;All interviews are embedded below.&lt;/p&gt; &lt;h3&gt;Resources:&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;YouTube playlist:Â &lt;a href="https://www.youtube.com/playlist?list=PLEGSLwUsxfEgT4XEohmRe_JB6MBnmLfBh"&gt;Red Hat Summit 2018 breakout sessions&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://agenda.summit.redhat.com/"&gt;List of all Red Hat Summit 2018 sessions&lt;/a&gt; (filterable by category)&lt;/li&gt; &lt;li&gt;&lt;a href="https://www.redhat.com/en/summit/2018"&gt;Red Hat Summit 2018&lt;/a&gt;Â main site&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span id="more-494317"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;TheCube.net Interviews&lt;/h2&gt; &lt;h3&gt;Craig Muzilla &amp;#8211; SVP of Red Hat Application Platforms business unit&lt;/h3&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;div align="center"&gt;&lt;iframe src="https://www.youtube.com/embed/aJ6HzIJ6YSc" width="560" height="315" frameborder="0" allowfullscreen="allowfullscreen"&gt;&lt;/iframe&gt;&lt;/div&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h3&gt;Harry Mower &amp;#8211; senior director, Red Hat Developer Programs&lt;/h3&gt; &lt;div align="center"&gt;&lt;iframe src="https://www.youtube.com/embed/CEejRTJHPc4" width="560" height="315" frameborder="0" allowfullscreen="allowfullscreen"&gt;&lt;span data-mce-type="bookmark" style="display: inline-block; width: 0px; overflow: hidden; line-height: 0;" class="mce_SELRES_start"&gt;ï»¿&lt;/span&gt;&lt;/iframe&gt;&lt;/div&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h3&gt;Chris Wright &amp;#8211; VP and chief technology officer, Red Hat&lt;/h3&gt; &lt;div align="center"&gt;&lt;iframe src="https://www.youtube.com/embed/EkPMaq-FmqA" width="560" height="315" frameborder="0" allowfullscreen="allowfullscreen"&gt;&lt;/iframe&gt;&lt;/div&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F15%2F100-red-hat-summit-2018-session-videos-online%2F&amp;#38;linkname=Watch%20over%20100%20Red%20Hat%20Summit%202018%20session%20videos%20online" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F15%2F100-red-hat-summit-2018-session-videos-online%2F&amp;#38;linkname=Watch%20over%20100%20Red%20Hat%20Summit%202018%20session%20videos%20online" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F15%2F100-red-hat-summit-2018-session-videos-online%2F&amp;#38;linkname=Watch%20over%20100%20Red%20Hat%20Summit%202018%20session%20videos%20online" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F15%2F100-red-hat-summit-2018-session-videos-online%2F&amp;#38;linkname=Watch%20over%20100%20Red%20Hat%20Summit%202018%20session%20videos%20online" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F15%2F100-red-hat-summit-2018-session-videos-online%2F&amp;#38;linkname=Watch%20over%20100%20Red%20Hat%20Summit%202018%20session%20videos%20online" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F15%2F100-red-hat-summit-2018-session-videos-online%2F&amp;#38;linkname=Watch%20over%20100%20Red%20Hat%20Summit%202018%20session%20videos%20online" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F15%2F100-red-hat-summit-2018-session-videos-online%2F&amp;#38;linkname=Watch%20over%20100%20Red%20Hat%20Summit%202018%20session%20videos%20online" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F15%2F100-red-hat-summit-2018-session-videos-online%2F&amp;#38;linkname=Watch%20over%20100%20Red%20Hat%20Summit%202018%20session%20videos%20online" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F15%2F100-red-hat-summit-2018-session-videos-online%2F&amp;#38;title=Watch%20over%20100%20Red%20Hat%20Summit%202018%20session%20videos%20online" data-a2a-url="https://developers.redhat.com/blog/2018/05/15/100-red-hat-summit-2018-session-videos-online/" data-a2a-title="Watch over 100 Red Hat Summit 2018 session videos online"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/05/15/100-red-hat-summit-2018-session-videos-online/"&gt;Watch over 100 Red Hat Summit 2018 session videos online&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/MCiDlqMhw7k" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Over 100 breakout sessions from Red Hat Summit 2018 are now available to watch on YouTube. Even if you were at Summit, there were too many sessions to attend all of the ones you might have wanted to see. All of the recorded sessions are in one big searchable YouTube playlist. In the next few [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/05/15/100-red-hat-summit-2018-session-videos-online/"&gt;Watch over 100 Red Hat Summit 2018 session videos online&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/05/15/100-red-hat-summit-2018-session-videos-online/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">494317</post-id><dc:creator>Rob Terzi</dc:creator><dc:date>2018-05-15T11:00:55Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/05/15/100-red-hat-summit-2018-session-videos-online/</feedburner:origLink></entry><entry><title>Hibernate Validator 6.0.10.Final released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/DN2nXywV6gM/" /><category term="feed_group_name_hibernate" scheme="searchisko:content:tags" /><category term="feed_name_inrelationto" scheme="searchisko:content:tags" /><category term="Hibernate Validator" scheme="searchisko:content:tags" /><category term="releases" scheme="searchisko:content:tags" /><author><name>Guillaume Smet</name></author><id>searchisko:content:id:jbossorg_blog-hibernate_validator_6_0_10_final_released</id><updated>2018-05-16T08:07:16Z</updated><published>2018-05-15T00:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We just released Hibernate Validator 6.0.10.Final which comes with bugfixes and a brand new Dutch translation.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This is a recommended upgrade for everyone using Hibernate Validator and it is a drop-in replacement of 6.0.9.Final (see &lt;a href="https://developer.jboss.org/wiki/HibernateValidatorMigrationGuide"&gt;our migration guide&lt;/a&gt;).&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="what-s-new"&gt;&lt;a class="anchor" href="#what-s-new"&gt;&lt;/a&gt;Whatâs new&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="sect2"&gt; &lt;h3 id="bug-fixes"&gt;&lt;a class="anchor" href="#bug-fixes"&gt;&lt;/a&gt;Bug fixes&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This release is mainly about fixing a few bugs and regressions and adding compatibility with the Bean Validation TCK 2.0.3.Final that was recently released.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The main fixes are:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HV-1604"&gt;HV-1604&lt;/a&gt; - Initializing &lt;code&gt;JPATraversableResolver&lt;/code&gt; fails with &lt;code&gt;IllegalAccessException&lt;/code&gt;: this is a regression from 6.0.3.Final, the &lt;code&gt;JPATraversableResolver&lt;/code&gt; was not correctly instantiated and thus not used, even in a JPA environment.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HV-1609"&gt;HV-1609&lt;/a&gt; - CDI extension should not rely on &lt;code&gt;@WithAnnotations&lt;/code&gt; filtering: &lt;code&gt;@WithAnnotations&lt;/code&gt; does not consider the annotations in the class hierarchy so a bean with constraint annotations only in the class hierarchy would not see these constraints applied.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HV-1614"&gt;HV-1614&lt;/a&gt; - Unable to specify constraints at more than 1 nested parameter of a typed container: in the programmatic API, nested container element constraints and cascading were not working as expected.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="jdk-10-support"&gt;&lt;a class="anchor" href="#jdk-10-support"&gt;&lt;/a&gt;JDK 10 support&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can now build and use Hibernate Validator with JDK 10.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Note that OSGi integration tests are excluded as we are still waiting for a new Pax-Exam release containing &lt;a href="https://github.com/ops4j/org.ops4j.pax.exam2/commit/aa0b70d15e930465c28575db3a52b3fc5c12b224"&gt;this fix&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="dutch-translation"&gt;&lt;a class="anchor" href="#dutch-translation"&gt;&lt;/a&gt;Dutch translation&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;a href="https://github.com/Maurice-Betzel"&gt;Maurice Betzel&lt;/a&gt; contributed a Dutch translation for our default validation messages.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="full-changelog"&gt;&lt;a class="anchor" href="#full-changelog"&gt;&lt;/a&gt;Full changelog&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The complete list of fixed issues can be found &lt;a href="https://hibernate.atlassian.net/issues/?jql=project%20%3D%20HV%20AND%20fixVersion%20%3D%206.0.10.Final%20order%20by%20created%20DESC"&gt;on our JIRA&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="thanks"&gt;&lt;a class="anchor" href="#thanks"&gt;&lt;/a&gt;Thanks&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For this release, we received nice contributions from:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;our usual suspect &lt;a href="https://github.com/marko-bekhta"&gt;Marko Bekhta&lt;/a&gt;,&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/RADickinson"&gt;Rob Dickinson&lt;/a&gt;,&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/Maurice-Betzel"&gt;Maurice Betzel&lt;/a&gt;,&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;and Nathan James Deckard.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Thanks a lot for your bug reports and patches.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="getting-6-0-10-final"&gt;&lt;a class="anchor" href="#getting-6-0-10-final"&gt;&lt;/a&gt;Getting 6.0.10.Final&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;To get the release with Maven, Gradle etc. use the GAV coordinates &lt;em&gt;org.hibernate.validator:{hibernate-validator|hibernate-validator-cdi|hibernate-validator-annotation-processor}:6.0.10.Final&lt;/em&gt;. Note that the group id has changed from &lt;code&gt;org.hibernate&lt;/code&gt; (Hibernate Validator 5 and earlier) to &lt;code&gt;org.hibernate.validator&lt;/code&gt; (from Hibernate Validator 6 onwards).&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Alternatively, a distribution bundle containing all the bits is provided on SourceForge (&lt;a href="http://sourceforge.net/projects/hibernate/files/hibernate-validator/6.0.10.Final/hibernate-validator-6.0.10.Final-dist.tar.gz/download"&gt;TAR.GZ&lt;/a&gt;, &lt;a href="http://sourceforge.net/projects/hibernate/files/hibernate-validator/6.0.10.Final/hibernate-validator-6.0.10.Final-dist.zip/download"&gt;ZIP&lt;/a&gt;).&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you want to benefit from the new features of this version on WildFly, we also provide WildFly patches for &lt;a href="http://search.maven.org/remotecontent?filepath=org/hibernate/validator/hibernate-validator-modules/6.0.10.Final/hibernate-validator-modules-6.0.10.Final-wildfly-11.0.0.Final-patch.zip"&gt;WildFly 11&lt;/a&gt; and &lt;a href="http://search.maven.org/remotecontent?filepath=org/hibernate/validator/hibernate-validator-modules/6.0.10.Final/hibernate-validator-modules-6.0.10.Final-wildfly-12.0.0.Final-patch.zip"&gt;WildFly 12&lt;/a&gt;. You can read about how to apply such patches &lt;a href="https://docs.jboss.org/hibernate/stable/validator/reference/en-US/html_single/#_updating_hibernate_validator_in_wildfly"&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="what-s-next"&gt;&lt;a class="anchor" href="#what-s-next"&gt;&lt;/a&gt;Whatâs next?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Our efforts are now directed towards the new 6.1, which will introduce some structuring changes such as allowing getters with non standard names (&lt;code&gt;name()&lt;/code&gt; instead of &lt;code&gt;getName()&lt;/code&gt; for instance), switching to Stax instead of JAXB for XML parsing as JAXB is being removed from JDK 11 and much more.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We updated &lt;a href="http://hibernate.org/validator/roadmap/"&gt;our roadmap&lt;/a&gt; with the ideas we have for the future. If you want to join us, donât hesitate to pick a task and come discuss it with us.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="feedback-issues-ideas"&gt;&lt;a class="anchor" href="#feedback-issues-ideas"&gt;&lt;/a&gt;Feedback, issues, ideas?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;To get in touch, use the usual channels:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://stackoverflow.com/questions/tagged/hibernate-validator"&gt;hibernate-validator tag on Stack Overflow&lt;/a&gt; (usage questions)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/c/hibernate-validator"&gt;User forum&lt;/a&gt; (usage questions, general feedback)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HV"&gt;Issue tracker&lt;/a&gt; (bug reports, feature requests)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://lists.jboss.org/pipermail/hibernate-dev/"&gt;Mailing list&lt;/a&gt; (development-related discussions)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://lists.jboss.org/pipermail/beanvalidation-dev/"&gt;Bean Validation development mailing list&lt;/a&gt; (discussions about the Bean Validation specification)&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/DN2nXywV6gM" height="1" width="1" alt=""/&gt;</content><summary>We just released Hibernate Validator 6.0.10.Final which comes with bugfixes and a brand new Dutch translation. This is a recommended upgrade for everyone using Hibernate Validator and it is a drop-in replacement of 6.0.9.Final (see our migration guide). Whatâs new Bug fixes This release is mainly about fixing a few bugs and regressions and adding compatibility with the Bean Validation TCK 2.0.3.Fi...</summary><dc:creator>Guillaume Smet</dc:creator><dc:date>2018-05-15T00:00:00Z</dc:date><feedburner:origLink>http://in.relation.to/2018/05/15/hibernate-validator-6010-final-out/</feedburner:origLink></entry><entry><title>The Effect of Ubiquitous Computing on Interaction</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/6cNQVLq9gcU/the-effect-of-ubiquitous-computing-on.html" /><category term="feed_group_name_jbossmessaging" scheme="searchisko:content:tags" /><category term="feed_name_clebert_suconic_" scheme="searchisko:content:tags" /><author><name>Clebert Suconic</name></author><id>searchisko:content:id:jbossorg_blog-the_effect_of_ubiquitous_computing_on_interaction</id><updated>2018-05-14T22:57:13Z</updated><published>2018-05-14T18:56:00Z</published><content type="html">I have been involved in messaging solutions for a few years already. I have learned with some of the best in the industry and I have had the privilege to work at Red Hat, with full support in Open Source at the messaging land.&lt;br /&gt;&lt;br /&gt;But today, my daughter Julia Suconic, taught me something on my own field. A 15 years old student on 10th grade at Marjory Stoneman Douglas wrote an AP (Advanced Placement) paper around Ubiquitous Computing, touching areas of sensors, software and things that I do on my daily basis and she did it all on her own with support of her teachers.&lt;br /&gt;&lt;br /&gt;So, I hope you excuse me a bit to just be a proud father while I share a paper talking about symbiotic evolution of species, and how privacy is affected by Ubiquitous computing. I hope you enjoy it:&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div dir="ltr" style="line-height: 2.4; margin-bottom: 0pt; margin-top: 0pt; text-align: center;"&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;The Effect of Ubiquitous Computing on Interaction, by Julia Suconic&lt;/span&gt;&lt;/div&gt;&lt;div dir="ltr" style="line-height: 2.4; margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;&lt;/span&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Nowadays, the world is teeming with technology as it becomes present in almost every aspect of people's lives. When humans were first introduced to the internet, it was a revolutionary phase in which the access to information was made possible with the click of a button. Now, the world is filled with electronic sensors that are all interconnected. However, there are silos that make most of the data from these sensors invisible to people. A silo is a system that is closed off from other systems. When silos are eliminated from the equation, ubiquitous computing will flourish and continue to develop. Ubiquitous computing is defined by Mark Weiser, chief technology officer at Xerox's Palo Alto Research Center, &amp;nbsp;as the method of enhancing computer use by making many computers available throughout the physical environment (Weiser). The interaction of humans with computers is enhanced through ubiquitous computing. As stated by Bill Gates, co-founder of Microsoft and an American business magnate, there is nothing that can stop the rapid advancement of technology as the relationship between computers and humans continue to develop (Gates). As ubiquitous computing becomes embedded into society, the relationship between computers and humans will be augmented. Ultimately, it enhances the way people interact by altering the way they interpret their environment, by benefiting human interaction through several programs, and by creating an advantageous symbiotic relationship between humans and computers.&lt;/span&gt;&lt;/div&gt;&lt;div dir="ltr" style="line-height: 2.4; margin-bottom: 0pt; margin-top: 0pt; text-indent: 36pt;"&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Gershon Dublon and Joseph A. Paradiso, researchers at the Responsive Environments group at MIT, explore how sensory networks augment human experience. Their research is described in the stimulus âExtra Sensory Perceptionâ in which they explain the integration of ubiquitous computing into society. Dublon and Paradiso state that with ubiquitous computing, information is gathered in new ways that are capable of redefining human senses, with the possibility of virtually travelling to a different environment through the senses&lt;/span&gt;&lt;span style="background-color: transparent; color: #980000; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt; &lt;/span&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;. Their research demonstrates the impact that ubiquitous computing has and will have on human senses. As the human sensory world is altered by ubiquitous computing, it will ultimately affect the way people think and socially interact. The senses play a crucial role in the way people interpret information from their environment, which affects their perception on reality. Richard Axel, a molecular biologist and University Professor in the Department of Neuroscience at Columbia University, makes the nobel lecture âScents and Sensibility: A Molecular Logic of Olfactory Perceptionâ in which he explains the relationship between the senses and the way people act, specifically olfactory perception. He states that, âsensory input is ultimately translated into meaningful neural output: thoughts and behavior.â With this in mind, Axel is conveying the point that the way people see the world through their senses affects their behavior .&lt;/span&gt;&lt;span style="background-color: transparent; color: red; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt; &lt;/span&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;The ideas from Axel, Dublon and Paradiso in the stimulus led me to my research question; how will the continuous development of ubiquitous computing affect human interactions?&lt;/span&gt;&lt;/div&gt;&lt;div dir="ltr" style="line-height: 2.4; margin-bottom: 0pt; margin-top: 0pt; text-indent: 36pt;"&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Interaction is enhanced by ubiquitous computing. There are several programs already being developed with ubiquitous computing that alter the way people interpret the world around them. M.I.T Media Lab, an &lt;/span&gt;&lt;span style="background-color: transparent; color: #222222; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;antidisciplinary research laborator&lt;/span&gt;&lt;span style="background-color: transparent; color: #222222; font-family: &amp;quot;arial&amp;quot;; font-size: 11pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;y, &lt;/span&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;is developing a sensor-browsing software called DoppleLab. DoppelLab is a cross-reality virtual environment that gathers information from sensors and translates it to the human perception. It is designed to contribute to visualization, sonification, and application development through the way people analyze the electronic data (M.I.T). According to Dublon and Paradiso, this reality browser has several of implications that can be beneficial in the future.&lt;/span&gt;&lt;span style="background-color: transparent; color: red; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt; &lt;/span&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;The software gathers and interprets data through sensors located in a building, including: temperature, motion and sound. It is then able to overlay the data that it gathers on an architectural computer-aided design model so that it can be viewed by people to assess any problems that occur in a building before the issue grows out of hand. In DoppleLab, people interpret the ubiquitous computing through a new sensory world, ultimately affecting perception. Another software that is being developed is a wearable device that allows the brain to adapt to new stimuli. It is capable of augmenting the senses by allowing people to hear faraway sounds or be able to smell something from another environment (Dublon and Paradiso). This approach can begin the connection between network sensor data and the human sensory system. When ubiquitous computing makes it possible for humans to smell something from an alternative location, their olfactory sense are affected. &lt;/span&gt;&lt;span style="background-color: white; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Sarafoleanu C, Mella C, Georgescu M, Perederco C, researchers at US National Medicine Library, concluded that the olfactory sense is linked with emotions and interaction. By altering olfactory senses, emotions and interactions are consequently altered. Not only this, they found that intense participation of the five senses is required in order to have a normal social life (Sarafoleanu et. al). Ubiquitous computing has an affect on all of the senses in the human sensory world, meaning that people's social lives would completely change from what they are accustomed to. &lt;/span&gt;&lt;/div&gt;&lt;div dir="ltr" style="line-height: 2.4; margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;&lt;/span&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Following English philosopher Gordon E. Mooreâs law ubiquitous computing will only get smaller and more powerful. These technological developments will lead to an increasingly interconnected world. &amp;nbsp;Dr. J.H. Abaway, affiliated to the Department of Information Technology at Deakin University, states that as a result of Mooreâs law technology will become extremely interconnected with the world (Abaway). In 1975, Moore stated that, âThe future of integrated electronics is the future of electronics itselfâ (Moore). This statement can be applied to ubiquitous computing due to fact ubiquitous computing involves the growing interconnectivity of technology with the physical world. An interconnected world uses ubiquitous computing to enhance interaction in humans. Zhiwen Yu and Xingshe Zhou, two professors at the school of Computer Science, Northwestern Polytechnical University, explain ubiquitous computing as socially aware computing that aims to leverage sensory data to support human communication and collaboration. Sensory computing accomplishes the enhancement of interaction by establishing a relationship between the physical world and the macroscopic society. This relationship is shown in figure 1 in which the socially aware computer takes in sensory data from the physical world and is able to give back theoretic guidance from the macroscopic society. The theoretic guidance given by the computer is used in order to assist the person in coming up with the best solution based on the situation and calculations the computer has done (Yu and Zhou). Ultimately, the interaction with the ubiquitous computing system gives the person control over the situation and enhances communication as they will interact with peers on what they believe ethically is the best approach to solve the problem. Using ubiquitous computing to enhance human interaction is very beneficial as it increases productivity and improves solutions.&lt;/span&gt;&lt;/div&gt;&lt;div dir="ltr" style="line-height: 2.4; margin-bottom: 0pt; margin-top: 0pt; text-align: center;"&gt;&lt;b id="docs-internal-guid-0395f95f-5fef-76b9-cd2f-a651510e6d21" style="-webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; caret-color: rgb(0, 0, 0); color: black; font-family: -webkit-standard; font-style: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-decoration: none; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px;"&gt;&lt;br /&gt;&lt;/b&gt;&lt;/div&gt;&lt;div dir="ltr" style="line-height: 2.4; margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt; This kind of social support from ubiquitous computing can also be seen in the work environment. Zhiwen Yu, Zhiyong Yu, Xingshe Zhou, and Yuichi Nakamura, researchers from Northwestern Polytechnical University in China and Kyoto University in Japan,&lt;/span&gt;&lt;span style="background-color: transparent; color: red; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt; &lt;/span&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;state that ubiquitous computing can present the groups social dynamics in the group by taking into account the users attention and attitude towards an issue. Ubiquitous computing accomplishes this with motion sensors and cameras that are successful in analyzing the meeting. After interpreting the social dynamics of a meeting it suggests multiple methods to enhance the interaction and productivity of the group (Yu et. al).&lt;/span&gt;&lt;span style="background-color: transparent; color: red; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt; &lt;/span&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;This would ultimately improve the productivity and participation of a business meeting as the social dynamics of a group is essential in how effective the meeting will be.&lt;/span&gt;&lt;span style="background-color: transparent; color: red; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt; &lt;/span&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Not only can&lt;/span&gt;&lt;span style="background-color: transparent; color: red; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt; &lt;/span&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;socially aware ubiquitous computing be seen in the business setting, it is also applied in order to enhance social interaction and develop relationships. Programs take a person's surroundings into consideration in order to analyze plausible relationships for the user of the software. Yu and Zhou explain VENETA as an example of this type of social support given by ubiquitous computing. VENTA recommends new friends based on the proximity of the person and mutual friends that they both may share, which enhances social interaction as people are encouraged to interact with one another. This software is able to assess mutual friends by comparing the contact book entries of phones that are both in the same bluetooth connection range (Yu and Zhou). Ubiquitous computing enhances human interaction through several programs that are socially aware.&lt;/span&gt;&lt;/div&gt;&lt;div dir="ltr" style="line-height: 2.4; margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;&lt;/span&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;On the other hand, there are people who disagree that ubiquitous computing enhances interaction. Rather, the opposing argument is that it makes us over reliant on technology. Sherry Turkle, a cultural analyst that studies how technology is shaping modern relationships, states in a Ted Talk that people rely more on technology than themselves as it advances to help with everyday tasks (Turkle). Contrary to the views of Yu and Zhou, Turkle believes that technology is hindering humans and that people should become more self reliant. However, according to J.C.R Licklider, an American psychologist and important figure in computer science, wrote his theory of man-computer symbiosis in 1960. In this idea, Licklider explains the cooperation that exists between technology and men. Computers are used by men to facilitate solutions and men use the complex information given by technology to control the complex solution (Licklider). This paper was written by Licklider decades ago, however it is still just as applicable today. Ian Foster, director of the Data Science and Learning division at Argonne National Laboratory, applies Lickliders idea of augmenting human intellect with computers. He concluded that the symbiotic relationship suggested by Licklider had not changes as both humans and computers continue to coexist and advance. The only difference from 1960, when Licklider published his paper, is that now more is demanded from computers as they have become more advanced. This symbiotic relationship can be applied to ubiquitous computing as it becomes increasingly embedded into society. As we continue to develop ubiquitous computing, it will further enhance interactions and productivity through a coexisting relationship. Rather than rely on computers, people use computers to their advantage so that they can advance along with advancing in their technology. &lt;/span&gt;&lt;/div&gt;&lt;div dir="ltr" style="line-height: 2.4; margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;&lt;/span&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Lack of privacy has become a rising concern to several as ubiquitous computing is embedded into society. This implication is due to the ability of ubiquitous computing to retrieve and use sensitive data, such interactions and attitudes. Richard Volkman, an Associate Professor of Philosophy at Southern Connecticut State University and Associate Director of the Research Center on Computing and Society, states that âthe right of privacyâ comes from the Neo-Lockean theory of natural rights including life, liberty and property (Volkman). Therefore, he believes that we deserve the freedom to privacy and computing should not conflict with that human right. To add on to Volckmans perspective, Dr. J.H. Abaway discusses the issue on privacy that comes with ubiquitous computing in his paper âHuman-Computer Interaction in Ubiquitous Computing Environmentsâ. Abaway states that a personâs body movements can reveal a vast amount of information about the individual(Abaway). As ubiquitous computing continues to advance to be able to analyze this kind of information, privacy becomes a serious issue. However, there are several plausible solutions that can make ubiquitous computing more privacy-aware. Ivan Gudymenko, and Katrin Borcea-Pfitzmann, r&lt;/span&gt;&lt;span style="background-color: white; color: #333333; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;esearchers at Dresden University of Technology on privacy protection in ubiquitous computing, have made several suggestions to allow for more privacy through ubiquitous computing. One such suggestion is to have the ubiquitous computing provide all details to the user in a transparent way so that they are aware of what information the computing is gathering. By doing this, privacy of the people is protected as they are giving permission to disclose data to the computing. Gudymenko and Pfitzmann also propose that proper privacy precautions should be built into the functionality of the ubiquitous computing in order for privacy to be enforced properly (Gudymenko and Pfitzmann). Even though privacy is a limitation to ubiquitous computing, there are ways to surpass it and continue to use ubiquitous computing to our advantage.&lt;/span&gt;&lt;/div&gt;&lt;div dir="ltr" style="line-height: 2.4; margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;span style="background-color: white; color: #333333; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;&lt;/span&gt;&lt;span style="background-color: white; color: #333333; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;To conclude, interaction is enhanced by ubiquitous computing. &amp;nbsp;It affects our sensory perception of the world by displaying information through the use of extra-sensory perception. As a result, the way people interact with one another is affected. Several socially-aware programs are enhancing the way people communicate with one another in order to be more successful. If the development of ubiquitous computing continues to be encouraged, it will be advantageous to human success and productivity.&lt;/span&gt;&lt;/div&gt;&lt;div dir="ltr" style="line-height: 2.4; margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;&lt;/span&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;&lt;/span&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div dir="ltr" style="line-height: 2.4; margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div dir="ltr" style="line-height: 2.4; margin-bottom: 0pt; margin-top: 0pt; text-align: center;"&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Work Cited&lt;/span&gt;&lt;/div&gt;&lt;div dir="ltr" style="line-height: 2.4; margin-bottom: 0pt; margin-top: 0pt; padding: 0pt 0pt 0pt 72pt; text-indent: -72pt;"&gt;&lt;span style="background-color: transparent; color: #333333; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Abaway, J.H. âHuman-Computer Interaction in Ubiquitous Computing Environments.â Nov. &amp;nbsp;2006.&lt;/span&gt;&lt;span style="background-color: transparent; color: #333333; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div dir="ltr" style="line-height: 2.4; margin-bottom: 0pt; margin-top: 0pt; padding: 0pt 0pt 0pt 72pt; text-indent: -72pt;"&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Axel, Richard. &lt;/span&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: italic; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Scents and Sensibility: A Molecular Logic of Olfactory Perception&lt;/span&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;. 8 Dec. 2004.&lt;/span&gt;&lt;/div&gt;&lt;div dir="ltr" style="line-height: 2.4; margin-bottom: 0pt; margin-top: 0pt; padding: 0pt 0pt 0pt 72pt; text-indent: -72pt;"&gt;&lt;span style="background-color: transparent; color: #333333; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;DoppelLab | Tools for Exploring &amp;amp; Harnessing Multimodal Sensor Network Data.â &lt;/span&gt;&lt;span style="background-color: transparent; color: #333333; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: italic; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;DoppelLab | Tools for Exploring &amp;amp; Harnessing Multimodal Sensor Network Data&lt;/span&gt;&lt;/div&gt;&lt;div dir="ltr" style="line-height: 2.4; margin-bottom: 0pt; margin-top: 0pt; padding: 0pt 0pt 0pt 72pt; text-indent: -72pt;"&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Dublon, Gershon and Joseph A. Paradiso. âExtra Sensory Perception.â Scientific American, July 2014&lt;/span&gt;&lt;/div&gt;&lt;div dir="ltr" style="line-height: 2.4; margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;span style="background-color: transparent; color: #333333; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Foster, Ian. &lt;/span&gt;&lt;span style="background-color: transparent; color: #333333; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: italic; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Human-Machine Symbiosis, 50 Years On&lt;/span&gt;&lt;span style="background-color: transparent; color: #333333; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;. 2006.&lt;/span&gt;&lt;/div&gt;&lt;div dir="ltr" style="line-height: 2.4; margin-bottom: 0pt; margin-top: 0pt; padding: 0pt 0pt 0pt 72pt; text-indent: -72pt;"&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Gates, Bill. âNVTC.â &lt;/span&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: italic; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;NVTC Events | Premier Titans Breakfast - Bill Gates of Microsoft | 3/13/08 | 6:45 Am Registration &amp;amp; Networking 7:45 - 9:30 Am Program&lt;/span&gt;&lt;/div&gt;&lt;div dir="ltr" style="line-height: 2.4; margin-bottom: 0pt; margin-top: 0pt; padding: 0pt 0pt 0pt 72pt; text-indent: -72pt;"&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Gudymenko, Ivan, and Katrin Borcea-Pfitzmann. &lt;/span&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: italic; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Privacy in Ubiquitous Computing&lt;/span&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;. Dresden University of Technology Department of Computer Science, .&lt;/span&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;&lt;/span&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div dir="ltr" style="line-height: 2.4; margin-bottom: 0pt; margin-top: 0pt; padding: 0pt 0pt 0pt 72pt; text-indent: -72pt;"&gt;&lt;span style="background-color: transparent; color: #333333; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Licklider, J.C.R. â1 Introduction.â &lt;/span&gt;&lt;span style="background-color: transparent; color: #333333; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: italic; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Warren and Brandeis, "The Right to Privacy"&lt;/span&gt;&lt;span style="background-color: transparent; color: #333333; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;, 1960, groups.csail.mit.edu/medg/people/psz/Licklider.html.&lt;/span&gt;&lt;span style="background-color: transparent; color: #333333; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;&lt;/span&gt;&lt;span style="background-color: transparent; color: #333333; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;&lt;/span&gt;&lt;span style="background-color: transparent; color: #333333; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div dir="ltr" style="line-height: 2.4; margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Moore, George E. âCramming More Components onto Integrated Circuits.â&lt;/span&gt;&lt;/div&gt;&lt;div dir="ltr" style="line-height: 2.4; margin-bottom: 0pt; margin-top: 0pt; padding: 0pt 0pt 0pt 72pt; text-indent: -72pt;"&gt;&lt;span style="background-color: transparent; color: #333333; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Sarafoleanu, C, et al. &lt;/span&gt;&lt;span style="background-color: transparent; color: #333333; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: italic; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Advances in Pediatrics.&lt;/span&gt;&lt;span style="background-color: transparent; color: #333333; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;, U.S. National Library of Medicine, 15 Apr. 2009,&lt;/span&gt;&lt;/div&gt;&lt;div dir="ltr" style="line-height: 2.4; margin-bottom: 0pt; margin-top: 0pt; padding: 0pt 0pt 0pt 72pt; text-indent: -72pt;"&gt;&lt;span style="background-color: transparent; color: #303030; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Sarafoleanu, C et al. âThe Importance of the Olfactory Sense in the Human Behavior and Evolution.â &lt;/span&gt;&lt;span style="background-color: transparent; color: #303030; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: italic; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Journal of Medicine and Life&lt;/span&gt;&lt;span style="background-color: transparent; color: #303030; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt; 2.2 (2009): 196â198. Print.&lt;/span&gt;&lt;span style="background-color: transparent; color: #333333; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div dir="ltr" style="line-height: 2.4; margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;span style="background-color: transparent; color: #333333; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Turkle, Sherry. âConnected, but Alone?â &lt;/span&gt;&lt;span style="background-color: transparent; color: #333333; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: italic; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;TED: Ideas Worth Spreading&lt;/span&gt;&lt;span style="background-color: transparent; color: #333333; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;, &lt;/span&gt;&lt;/div&gt;&lt;div dir="ltr" style="line-height: 2.4; margin-bottom: 0pt; margin-top: 0pt; padding: 0pt 0pt 0pt 72pt; text-indent: -72pt;"&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Volkman. R., 2003, âPrivacy as life, liberty,property,â Ethics and Information Technology, Vol. 5, pp.199-210.&lt;/span&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div dir="ltr" style="line-height: 2.4; margin-bottom: 0pt; margin-top: 0pt; padding: 0pt 0pt 0pt 72pt; text-indent: -72pt;"&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Weiser, Mark. âSome Computer Science Issues in Ubiquitous Computing.â 23 Mar. 1993.&lt;/span&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div dir="ltr" style="line-height: 2.4; margin-bottom: 0pt; margin-top: 0pt; padding: 0pt 0pt 0pt 72pt; text-indent: -72pt;"&gt;&lt;span style="background-color: transparent; color: #333333; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Yu, Z. W., Yu, Z. Y., Zhou, X., &amp;amp; Nakamura, Y. (2010b). Multimodal sensing, recognizing and browsing group social dynamics. &lt;/span&gt;&lt;span style="background-color: transparent; color: #333333; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: italic; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Personal and Ubiquitous Computing, 14&lt;/span&gt;&lt;span style="background-color: transparent; color: #333333; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;(8), 695â702. New York. &lt;/span&gt;&lt;/div&gt;&lt;div dir="ltr" style="line-height: 2.4; margin-bottom: 0pt; margin-top: 0pt; padding: 0pt 0pt 0pt 72pt; text-indent: -72pt;"&gt;&lt;span style="background-color: transparent; color: #333333; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Yu, Zhiwen, and Xingshe Zhou. âSocially Aware Computing: Concepts, Technologies, and Practices.â 2014, pp. 10â17.&lt;/span&gt;&lt;/div&gt;&lt;div dir="ltr" style="line-height: 2.4; margin-bottom: 0pt; margin-top: 0pt; padding: 0pt 0pt 0pt 72pt; text-indent: -72pt;"&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;âPartners in Cognition: Extending Human Intelligence with Intelligent Technologies.â &lt;/span&gt;&lt;span style="background-color: transparent; color: black; font-family: &amp;quot;times new roman&amp;quot;; font-size: 12pt; font-style: italic; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Philosophy of the Social Sciences&lt;/span&gt;&lt;/div&gt;&lt;div dir="ltr" style="line-height: 2.4; margin-bottom: 0pt; margin-top: 0pt; text-align: center;"&gt;&lt;span style="text-align: start;"&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/6cNQVLq9gcU" height="1" width="1" alt=""/&gt;</content><summary>I have been involved in messaging solutions for a few years already. I have learned with some of the best in the industry and I have had the privilege to work at Red Hat, with full support in Open Source at the messaging land. But today, my daughter Julia Suconic, taught me something on my own field. A 15 years old student on 10th grade at Marjory Stoneman Douglas wrote an AP (Advanced Placement) ...</summary><dc:creator>Clebert Suconic</dc:creator><dc:date>2018-05-14T18:56:00Z</dc:date><feedburner:origLink>http://clebertsuconic.blogspot.com/2018/05/the-effect-of-ubiquitous-computing-on.html</feedburner:origLink></entry><entry><title>Making the Operation of Code More Transparent and Obvious</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/-tuxazRPGSA/" /><category term="Developer Tools" /><category term="Red Hat Enterprise Linux" /><category term="Ruby" /><category term="debug" /><category term="debugging" /><category term="RHEL" /><category term="ruby" /><category term="Ruby MRI" /><category term="systemtap" /><category term="trace" /><category term="tracing" /><author><name>William Cohen</name></author><id>https://developers.redhat.com/blog/?p=491587</id><updated>2018-05-14T11:00:44Z</updated><published>2018-05-14T11:00:44Z</published><content type="html">&lt;p&gt;You can study source code and manually instrument functions as described in theÂ &lt;a href="https://developers.redhat.com/blog/2018/05/11/use-the-dynamic-tracing-tools-luke/"&gt;âUse the dynamic tracing tools, Lukeâ&lt;/a&gt; blog article, but why not make it easier to find key points in the software by adding user-space markers to the application code? User-space markers have been available in Linux for quite some time (since 2009). The inactive user-space markers do not significantly slow down the code. Having them available allows you to get a more accurate picture of what the software is doing internally when unexpected issues occur. The diagnostic instrumentation can be more portable with the user-space markers, because the instrumentation does not need to rely on instrumenting particular function names or lines numbers in source code. The naming of the instrumentation points can also make clearer what event is associated with a particular instrumentation point.&lt;/p&gt; &lt;p&gt;For example, Ruby MRI on Red Hat Enterprise Linux 7 has a number of different instrumentation points made available as a SystemTap tapset. If SystemTap is installed on the system, as described by &lt;a href="https://access.redhat.com/solutions/5441"&gt;What is SystemTap and how to use it?&lt;/a&gt;, the installed Ruby MRI instrumentation points can be listed with the &lt;code&gt;stap -L&lt;/code&gt;&amp;#8221; command shown below. These events show the start and end of various operations in the Ruby runtime, such as the start and end of garbage collection (GC) marking and sweeping.&lt;span id="more-491587"&gt;&lt;/span&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ stap -L "ruby.**" ruby.array.create size:long file:string line:long $arg1:long $arg2:long $arg3:long ruby.cmethod.entry classname:string methodname:string file:string line:long $arg1:long $arg2:long $arg3:long $arg4:long ruby.cmethod.return classname:string methodname:string file:string line:long $arg1:long $arg2:long $arg3:long $arg4:long ruby.find.require.entry requiredfile:string file:string line:long $arg1:long $arg2:long $arg3:long ruby.find.require.return requiredfile:string file:string line:long $arg1:long $arg2:long $arg3:long ruby.gc.mark.begin ruby.gc.mark.end ruby.gc.sweep.begin ruby.gc.sweep.end ruby.hash.create size:long file:string line:long $arg1:long $arg2:long $arg3:long ruby.load.entry loadedfile:string file:string line:long $arg1:long $arg2:long $arg3:long ruby.load.return loadedfile:string $arg1:long $arg2:long $arg3:long ruby.method.entry classname:string methodname:string file:string line:long $arg1:long $arg2:long $arg3:long $arg4:long ruby.method.return classname:string methodname:string file:string line:long $arg1:long $arg2:long $arg3:long $arg4:long ruby.object.create classname:string file:string line:long $arg1:long $arg2:long $arg3:long ruby.parse.begin parsedfile:string parsedline:long $arg1:long $arg2:long ruby.parse.end parsedfile:string parsedline:long $arg1:long $arg2:long ruby.raise classname:string file:string line:long $arg1:long $arg2:long $arg3:long ruby.require.entry requiredfile:string file:string line:long $arg1:long $arg2:long $arg3:long ruby.require.return requiredfile:string $arg1:long $arg2:long $arg3:long ruby.string.create size:long file:string line:long $arg1:long $arg2:long $arg3:long &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Ruby and other languages provide tools to give some information about aspects of the their operation, such as statistics about garbage collection. However, often these tools are designed just to work within the confines of that language and a single process. These language-specific tools are less useful for examining problems that span code written in different languages or problems between multiple communicating processes. There are existing compiled C libraries that have been plugged into Python, Ruby, and Java code. Having SystemTap tapsets for the operations and events in these shared libraries can make it easier to write diagnostics that give a clearer understanding of what is occurring across multiple software components of complex systems.&lt;/p&gt; &lt;p&gt;For example, you might have a Ruby program that uses a GUI built on GNOME GLib libraries. You observe pauses when doing the screen updates. You suspect that the pause might be due to Ruby&amp;#8217;s garbage collection, but also consider that the pauses could be due to issues in the GLib library operations. The developers of the GLib libraries have included a number of instrumentation points in the libraries. Having instrumentation points in both the Ruby runtime and GLib libraries allows you to check both of those different areas of code using a single tool, SystemTap.&lt;/p&gt; &lt;p&gt;Over time, developers and maintainers of various software packages have added user-space markers to their applications. At Red Hat, we have enabled that instrumentation where possible in the RHEL packages. On RHEL 7.5, a number of RPMs make SystemTap user-space probes available, as seen with a query of files in &lt;code&gt;/usr/share/systemtap/tapset&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ cd /usr/share/systemtap/tapset; find -path "*.stp" -exec rpm -qf {} \; |sort |uniq glib2-devel-2.54.2-2.el7.x86_64 java-1.7.0-openjdk-devel-1.7.0.171-2.6.13.2.el7.x86_64 libvirt-client-3.9.0-14.el7_5.2.x86_64 nodejs-6.14.0-1.el7.x86_64 pcp-3.12.2-5.el7.x86_64 perl-devel-5.16.3-292.el7.x86_64 python-libs-2.7.5-68.el7.x86_64 qemu-kvm-1.5.3-156.el7.x86_64 qemu-system-alpha-2.0.0-1.el7.6.x86_64 qemu-system-arm-2.0.0-1.el7.6.x86_64 qemu-system-cris-2.0.0-1.el7.6.x86_64 qemu-system-lm32-2.0.0-1.el7.6.x86_64 qemu-system-m68k-2.0.0-1.el7.6.x86_64 qemu-system-microblaze-2.0.0-1.el7.6.x86_64 qemu-system-mips-2.0.0-1.el7.6.x86_64 qemu-system-moxie-2.0.0-1.el7.6.x86_64 qemu-system-or32-2.0.0-1.el7.6.x86_64 qemu-system-s390x-2.0.0-1.el7.6.x86_64 qemu-system-sh4-2.0.0-1.el7.6.x86_64 qemu-system-unicore32-2.0.0-1.el7.6.x86_64 qemu-system-x86-2.0.0-1.el7.6.x86_64 qemu-system-xtensa-2.0.0-1.el7.6.x86_64 qemu-user-2.0.0-1.el7.6.x86_64 ruby-libs-2.0.0.648-33.el7_4.x86_64 sssd-common-1.16.0-19.el7.x86_64 systemtap-client-3.2-4.el7.x86_64 systemtap-devel-3.2-4.el7.x86_64&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You should consider adding similar, handy instrumentation probe points to the applications you maintain to make it easier for you and others to investigate issues on complex systems. &lt;a href="https://sourceware.org/systemtap/wiki/AddingUserSpaceProbingToApps"&gt;Adding User Space Probing to an Application (heapsort example)&lt;/a&gt; provides information about how to implement this instrumentation.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F14%2Fmaking-the-operation-of-code-more-transparent-and-obvious%2F&amp;#38;linkname=Making%20the%20Operation%20of%20Code%20More%20Transparent%20and%20Obvious" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F14%2Fmaking-the-operation-of-code-more-transparent-and-obvious%2F&amp;#38;linkname=Making%20the%20Operation%20of%20Code%20More%20Transparent%20and%20Obvious" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F14%2Fmaking-the-operation-of-code-more-transparent-and-obvious%2F&amp;#38;linkname=Making%20the%20Operation%20of%20Code%20More%20Transparent%20and%20Obvious" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F14%2Fmaking-the-operation-of-code-more-transparent-and-obvious%2F&amp;#38;linkname=Making%20the%20Operation%20of%20Code%20More%20Transparent%20and%20Obvious" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F14%2Fmaking-the-operation-of-code-more-transparent-and-obvious%2F&amp;#38;linkname=Making%20the%20Operation%20of%20Code%20More%20Transparent%20and%20Obvious" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F14%2Fmaking-the-operation-of-code-more-transparent-and-obvious%2F&amp;#38;linkname=Making%20the%20Operation%20of%20Code%20More%20Transparent%20and%20Obvious" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F14%2Fmaking-the-operation-of-code-more-transparent-and-obvious%2F&amp;#38;linkname=Making%20the%20Operation%20of%20Code%20More%20Transparent%20and%20Obvious" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F14%2Fmaking-the-operation-of-code-more-transparent-and-obvious%2F&amp;#38;linkname=Making%20the%20Operation%20of%20Code%20More%20Transparent%20and%20Obvious" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F14%2Fmaking-the-operation-of-code-more-transparent-and-obvious%2F&amp;#38;title=Making%20the%20Operation%20of%20Code%20More%20Transparent%20and%20Obvious" data-a2a-url="https://developers.redhat.com/blog/2018/05/14/making-the-operation-of-code-more-transparent-and-obvious/" data-a2a-title="Making the Operation of Code More Transparent and Obvious"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/05/14/making-the-operation-of-code-more-transparent-and-obvious/"&gt;Making the Operation of Code More Transparent and Obvious&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/-tuxazRPGSA" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;You can study source code and manually instrument functions as described in theÂ âUse the dynamic tracing tools, Lukeâ blog article, but why not make it easier to find key points in the software by adding user-space markers to the application code? User-space markers have been available in Linux for quite some time (since 2009). The [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/05/14/making-the-operation-of-code-more-transparent-and-obvious/"&gt;Making the Operation of Code More Transparent and Obvious&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/05/14/making-the-operation-of-code-more-transparent-and-obvious/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">491587</post-id><dc:creator>William Cohen</dc:creator><dc:date>2018-05-14T11:00:44Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/05/14/making-the-operation-of-code-more-transparent-and-obvious/</feedburner:origLink></entry><entry><title>Red Hat Summit 2018 - 3 Pitfalls Everyone Should Avoid with Hybrid Mulitcloud (recording)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/IR0T9QzaJXw/redhat-summit-2018-3-pitfalls-video.html" /><category term="cloud" scheme="searchisko:content:tags" /><category term="Cloud Suite" scheme="searchisko:content:tags" /><category term="conference" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="OpenStack" scheme="searchisko:content:tags" /><category term="video" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-red_hat_summit_2018_3_pitfalls_everyone_should_avoid_with_hybrid_mulitcloud_recording</id><updated>2018-05-14T05:00:00Z</updated><published>2018-05-14T05:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;a href="https://www.slideshare.net/eschabell/red-hat-summit-2018-3-pitfalls-everyone-should-avoid-with-hybrid-multicloud" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img alt="red Hat sumit" border="0" data-original-height="708" data-original-width="1260" height="178" src="https://4.bp.blogspot.com/-4l7Jb2wdiyg/WvkWo9tHjnI/AAAAAAAAsnU/Z-v43ZbZn6MtnzrfxGtHRVFxuwpa-c0JgCLcBGAs/s320/3-pitfalls.png" title="" width="320" /&gt;&lt;/a&gt;&lt;br /&gt;In&amp;nbsp;&lt;a href="http://www.schabell.org/2017/12/redhat-summit-2018-hybrid-multi-cloud-optimize-it-vm-migration-submissions.html" target="_blank"&gt;my previous article&lt;/a&gt;&amp;nbsp;I highlighted the talk and lab I'm presenting at this years Red Hat Summit in San Francisco, CA next week.&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;As promised in the session talk we have, both Roel Hodzelmans and myself have the slides used here online and available for your viewing pleasure.&lt;br /&gt;&lt;br /&gt;The only thing missing was the video recording... which we have now online:&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;div align="center"&gt;&lt;iframe allow="autoplay; encrypted-media" allowfullscreen="" frameborder="0" height="315" src="https://www.youtube.com/embed/eACHhV_uxTE?rel=0" width="560"&gt;&lt;/iframe&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;Thanks for attending and if you missed it, feel free to reach out for a personal appearance to present this for your group.&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=xuUOe8Wp1jo:8nTTzm6mN9k:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=xuUOe8Wp1jo:8nTTzm6mN9k:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=xuUOe8Wp1jo:8nTTzm6mN9k:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=xuUOe8Wp1jo:8nTTzm6mN9k:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=xuUOe8Wp1jo:8nTTzm6mN9k:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=xuUOe8Wp1jo:8nTTzm6mN9k:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=xuUOe8Wp1jo:8nTTzm6mN9k:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=xuUOe8Wp1jo:8nTTzm6mN9k:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=xuUOe8Wp1jo:8nTTzm6mN9k:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=xuUOe8Wp1jo:8nTTzm6mN9k:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=xuUOe8Wp1jo:8nTTzm6mN9k:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/xuUOe8Wp1jo" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/IR0T9QzaJXw" height="1" width="1" alt=""/&gt;</content><summary>InÂ my previous articleÂ I highlighted the talk and lab I'm presenting at this years Red Hat Summit in San Francisco, CA next week. As promised in the session talk we have, both Roel Hodzelmans and myself have the slides used here online and available for your viewing pleasure. The only thing missing was the video recording... which we have now online: Thanks for attending and if you missed it, feel...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2018-05-14T05:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/xuUOe8Wp1jo/redhat-summit-2018-3-pitfalls-video.html</feedburner:origLink></entry><entry><title>Hibernate ORM 5.3.0.Final release</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Ng8V0aHg6ug/" /><category term="feed_group_name_hibernate" scheme="searchisko:content:tags" /><category term="feed_name_inrelationto" scheme="searchisko:content:tags" /><category term="Hibernate ORM" scheme="searchisko:content:tags" /><category term="releases" scheme="searchisko:content:tags" /><author><name>Steve Ebersole</name></author><id>searchisko:content:id:jbossorg_blog-hibernate_orm_5_3_0_final_release</id><updated>2018-05-16T08:07:16Z</updated><published>2018-05-14T00:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Hibernate ORM version 5.3.0.Final has just been released.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="jpa-2-2-suppport"&gt;&lt;a class="anchor" href="#jpa-2-2-suppport"&gt;&lt;/a&gt;JPA 2.2 Suppport&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Hibernate ORM 5.3 implements support for JPA 2.2.&lt;/p&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="cdi-hosted-attributeconverters"&gt;&lt;a class="anchor" href="#cdi-hosted-attributeconverters"&gt;&lt;/a&gt;CDI-hosted AttributeConverters&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Starting with JPA 2.1 applications may use CDI-hosted beans as entity event listeners. JPA 2.2 extends that support to allow AttributeConverters to be CDI-hosted beans as well.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;To facilitate this, we have developed a generic interface that allows access to any kind of bean hosted in any type of DI/bean container. The contract for integrating such bean containers is &lt;code&gt;org.hibernate.resource.beans.container.spi.BeanContainer&lt;/code&gt;. Hibernate comes with implementations of &lt;code&gt;BeanContainer&lt;/code&gt; for integrating with CDI; we have also tested adapting it to Spring container.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Applications would normally not access these services. Integrators however might want to use them to leverage Hibernate integration with these back-end containers. The &lt;code&gt;BeanContainer&lt;/code&gt; can be accessed from the &lt;code&gt;org.hibernate.resource.beans.spi.ManagedBeanRegistry&lt;/code&gt; which is a service that hides the repetitive details of dealing with &lt;code&gt;BeanContainer&lt;/code&gt; based on Hibernateâs normal usage. &lt;code&gt;ManagedBeanRegistry&lt;/code&gt; is a service and can be accessed from the SessionFactoryâs ServiceRegistry.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="support-for-repeating-annotations"&gt;&lt;a class="anchor" href="#support-for-repeating-annotations"&gt;&lt;/a&gt;Support for repeating annotations&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;JPA 2.2 defines support for repeating annotations (&lt;code&gt;@java.lang.annotation.Repeatable&lt;/code&gt;). This includes the addition of &lt;code&gt;@TableGenerators&lt;/code&gt; and &lt;code&gt;@SequenceGenerators&lt;/code&gt;. All other JPA annotations already had "containing" annotations.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="query-result-streaming"&gt;&lt;a class="anchor" href="#query-result-streaming"&gt;&lt;/a&gt;Query result streaming&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;JPA 2.2 adds &lt;code&gt;Query#getStream&lt;/code&gt; to support streaming of the query results. Of course Hibernate has had this for some time, although we had named ours &lt;code&gt;Query#stream&lt;/code&gt; more in keeping with the choice made in most other uses including most JDK uses. But either way, both are available.. the JPA &lt;code&gt;javax.persistence.Query#getStream&lt;/code&gt; and Hibernateâs &lt;code&gt;org.hibernate.query.Query#stream&lt;/code&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="support-java-8-date-and-time-api"&gt;&lt;a class="anchor" href="#support-java-8-date-and-time-api"&gt;&lt;/a&gt;Support Java 8 Date and Time API&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Again, this is something Hibernate has already supported for quite some time. But JPA 2.2 has made support for the Java 8 date/time APIs part of the standard.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="caching-and-inheritance"&gt;&lt;a class="anchor" href="#caching-and-inheritance"&gt;&lt;/a&gt;Caching and inheritance&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;5.3 adds the ability to enable/disable caching at any level within a mapped hierarchy. This is a change from previous versions that only allowed controlling caching on the root entity. See &lt;a href="https://hibernate.atlassian.net/browse/HHH-12146"&gt;HHH-12146&lt;/a&gt; for details.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="jpacompliance"&gt;&lt;a class="anchor" href="#jpacompliance"&gt;&lt;/a&gt;JpaCompliance&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;During bootstrapping a SessionFactory/EntityManagerFactory can be configured with a level of "JPA compliance" that indicates what behaviors it should comply with JPA. These are generally situations where Hibernate has historically done something different or where we think the specification is not the best solution. This &lt;code&gt;JpaCompliance&lt;/code&gt; is used to control how Hibernate should act in these circumstances. See the javadocs for &lt;code&gt;org.hibernate.jpa.JpaCompliance&lt;/code&gt; for details.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="more-intuitive-handling-of-id-generator-names"&gt;&lt;a class="anchor" href="#more-intuitive-handling-of-id-generator-names"&gt;&lt;/a&gt;More intuitive handling of id generator names&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Previously when Hibernate encountered a &lt;code&gt;@GeneratedValue&lt;/code&gt; in relation to an identifier, it would assume that there was a matching named generator annotation. For example, if an application specified &lt;code&gt;@GeneratedValue(strategy=TABLE, name="abc")&lt;/code&gt; Hibernate would expect to see a &lt;code&gt;@TableGenerator&lt;/code&gt; or a &lt;code&gt;@org.hibernate.annotations.GenericGenerator&lt;/code&gt; with the same name. Which means that youâd often see mappings like:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code&gt;@Entity public class AnEntity { @Id @GeneratedValue(strategy=SEQUENCE, name="MY_SEQ") @SequenceGenerator(name="MY_SEQ", sequenceName="MY_SEQ") public Long getId() {...} ... }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The &lt;code&gt;SequenceGenerator&lt;/code&gt; in the above example adds no additional information and is really completely unnecessary. So Hibernate now recognizes the following mapping in exactly the same way as the above mapping:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code&gt;@Entity public class AnEntity { @Id @GeneratedValue(strategy=SEQUENCE, name="MY_SEQ") public Long getId() {...} ... }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="binary-compatibility"&gt;&lt;a class="anchor" href="#binary-compatibility"&gt;&lt;/a&gt;Binary Compatibility&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Hibernate version 5.2 introduced some unintented (as well as some intended) binary incompatiblities. Gail Badner did a great job identifying and categorizing these binary incompatibilities which led to a group of work to fix these unintended ones and to document the intended ones in the migration guide if not already. See &lt;a href="https://hibernate.atlassian.net/browse/HHH-12424"&gt;HHH-12424&lt;/a&gt; for details.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="java-9-module-naming"&gt;&lt;a class="anchor" href="#java-9-module-naming"&gt;&lt;/a&gt;Java 9 module naming&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Hibernate ORM jars now specify Java 9 module naming following the pattern &lt;code&gt;org.hibernate.orm.${module-name}&lt;/code&gt;. For example, the module name for &lt;code&gt;hibernate-core&lt;/code&gt; is &lt;code&gt;org.hibernate.orm.core&lt;/code&gt;; the module name for &lt;code&gt;hibernate-c3p0&lt;/code&gt; is &lt;code&gt;org.hibernate.orm.c3p0&lt;/code&gt;; etc.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="improved-memory-consumption"&gt;&lt;a class="anchor" href="#improved-memory-consumption"&gt;&lt;/a&gt;Improved Memory Consumption&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Improvements made under &lt;a href="https://hibernate.atlassian.net/browse/HHH-12556"&gt;HHH-12556&lt;/a&gt; and &lt;a href="https://hibernate.atlassian.net/browse/HHH-12558"&gt;HHH-12558&lt;/a&gt; can significantly reduce the amount of memory consumed by a Hibernate SessionFactory in many applications.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="additional-information"&gt;&lt;a class="anchor" href="#additional-information"&gt;&lt;/a&gt;Additional Information&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://hibernate.org/orm/releases/5.3/"&gt;Downloads&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://hibernate.org/orm/documentation/5.3/"&gt;Documentation&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Ng8V0aHg6ug" height="1" width="1" alt=""/&gt;</content><summary>Hibernate ORM version 5.3.0.Final has just been released. JPA 2.2 Suppport Hibernate ORM 5.3 implements support for JPA 2.2. CDI-hosted AttributeConverters Starting with JPA 2.1 applications may use CDI-hosted beans as entity event listeners. JPA 2.2 extends that support to allow AttributeConverters to be CDI-hosted beans as well. To facilitate this, we have developed a generic interface that allo...</summary><dc:creator>Steve Ebersole</dc:creator><dc:date>2018-05-14T00:00:00Z</dc:date><feedburner:origLink>http://in.relation.to/2018/05/14/hibernate-orm-530-final-release/</feedburner:origLink></entry><entry><title>Infinispan 9.3.0.Beta1</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/ek2EkhURueA/infinispan-930beta1.html" /><category term="9.2" scheme="searchisko:content:tags" /><category term="beta" scheme="searchisko:content:tags" /><category term="feed_group_name_infinispan" scheme="searchisko:content:tags" /><category term="feed_name_infinispan" scheme="searchisko:content:tags" /><category term="release" scheme="searchisko:content:tags" /><author><name>Tristan Tarrant</name></author><id>searchisko:content:id:jbossorg_blog-infinispan_9_3_0_beta1</id><updated>2018-05-11T16:07:52Z</updated><published>2018-05-11T16:07:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;span style="background-color: white; color: #4c4c4c; font-family: Helvetica, &amp;quot;Trebuchet MS&amp;quot;, Trebuchet, Verdana, sans-serif; font-size: 13px;"&gt;Infinispan users,&lt;/span&gt;&lt;br style="background-color: white; color: #4c4c4c; font-family: Helvetica, &amp;quot;Trebuchet MS&amp;quot;, Trebuchet, Verdana, sans-serif; font-size: 13px;" /&gt;&lt;br style="background-color: white; color: #4c4c4c; font-family: Helvetica, &amp;quot;Trebuchet MS&amp;quot;, Trebuchet, Verdana, sans-serif; font-size: 13px;" /&gt;&lt;span style="background-color: white; color: #4c4c4c; font-family: Helvetica, &amp;quot;Trebuchet MS&amp;quot;, Trebuchet, Verdana, sans-serif; font-size: 13px;"&gt;We have just released 9.3.0.Beta1 which includes&amp;nbsp;&lt;/span&gt;&lt;a href="https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12310799&amp;amp;version=12337255" style="background-color: white; color: #431609; font-family: Helvetica, &amp;quot;Trebuchet MS&amp;quot;, Trebuchet, Verdana, sans-serif; font-size: 13px;" target="_blank"&gt;38 fixes&lt;/a&gt;&lt;span style="background-color: white; color: #4c4c4c; font-family: Helvetica, &amp;quot;Trebuchet MS&amp;quot;, Trebuchet, Verdana, sans-serif; font-size: 13px;"&gt;. Highlights of this release include:&lt;/span&gt;&lt;br /&gt;&lt;ul style="background-color: white;"&gt;&lt;li style="color: #4c4c4c; font-family: Helvetica, &amp;quot;Trebuchet MS&amp;quot;, Trebuchet, Verdana, sans-serif; font-size: 13px;"&gt;Conflict Resolution Improvements&lt;/li&gt;&lt;ul style="color: #4c4c4c; font-family: Helvetica, &amp;quot;Trebuchet MS&amp;quot;, Trebuchet, Verdana, sans-serif; font-size: 13px;"&gt;&lt;li style="line-height: inherit;"&gt;MergePolicy.NONE is now the default merge-policy&lt;/li&gt;&lt;li style="line-height: inherit;"&gt;Conflict Resolution during a merge is now non-blocking and tolerant of node failures&lt;/li&gt;&lt;/ul&gt;&lt;li style="color: #4c4c4c; font-family: Helvetica, &amp;quot;Trebuchet MS&amp;quot;, Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: inherit;"&gt;Reactive Streams based Cache Loader SPI available&lt;/li&gt;&lt;li style="color: #4c4c4c; font-family: Helvetica, &amp;quot;Trebuchet MS&amp;quot;, Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: inherit;"&gt;Infinispan can now be built and tested with Java 10/11&lt;/li&gt;&lt;li style="color: #4c4c4c; font-family: Helvetica, &amp;quot;Trebuchet MS&amp;quot;, Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: inherit;"&gt;Max Idle expiration is now cluster-wide including events&lt;/li&gt;&lt;li style="color: #4c4c4c; font-family: Helvetica, &amp;quot;Trebuchet MS&amp;quot;, Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: inherit;"&gt;The Java Hot Rod client can handle data in multiple formats&lt;/li&gt;&lt;li style="color: #4c4c4c; font-family: Helvetica, &amp;quot;Trebuchet MS&amp;quot;, Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: inherit;"&gt;Improved merge &lt;i&gt;after&lt;/i&gt; long GC pauses avoiding data loss&lt;/li&gt;&lt;li style="color: #4c4c4c; font-family: Helvetica, &amp;quot;Trebuchet MS&amp;quot;, Trebuchet, Verdana, sans-serif; font-size: 13px;"&gt;Admin console supports counters in standalone mode&lt;/li&gt;&lt;li style="color: #4c4c4c; font-family: Helvetica, &amp;quot;Trebuchet MS&amp;quot;, Trebuchet, Verdana, sans-serif; font-size: 13px;"&gt;Lots of bug fixes, test fixes,&amp;nbsp;and&amp;nbsp;documentation improvements&lt;/li&gt;&lt;/ul&gt;&lt;span style="background-color: white; color: #4c4c4c; font-family: Helvetica, &amp;quot;Trebuchet MS&amp;quot;, Trebuchet, Verdana, sans-serif; font-size: 13px;"&gt;As usual, you can find all the bits on our&amp;nbsp;&lt;/span&gt;&lt;a href="http://infinispan.org/download/" style="background-color: white; color: #431609; font-family: Helvetica, &amp;quot;Trebuchet MS&amp;quot;, Trebuchet, Verdana, sans-serif; font-size: 13px;" target="_blank"&gt;website&lt;/a&gt;&lt;span style="background-color: white; color: #4c4c4c; font-family: Helvetica, &amp;quot;Trebuchet MS&amp;quot;, Trebuchet, Verdana, sans-serif; font-size: 13px;"&gt;. If you find any issues, don't hesitate to report them on our&amp;nbsp;&lt;/span&gt;&lt;a href="https://issues.jboss.org/projects/ISPN" style="background-color: white; color: #431609; font-family: Helvetica, &amp;quot;Trebuchet MS&amp;quot;, Trebuchet, Verdana, sans-serif; font-size: 13px;" target="_blank"&gt;issue tracker.&lt;/a&gt;&lt;br style="background-color: white; color: #4c4c4c; font-family: Helvetica, &amp;quot;Trebuchet MS&amp;quot;, Trebuchet, Verdana, sans-serif; font-size: 13px;" /&gt;&lt;br style="background-color: white; color: #4c4c4c; font-family: Helvetica, &amp;quot;Trebuchet MS&amp;quot;, Trebuchet, Verdana, sans-serif; font-size: 13px;" /&gt;&lt;span style="background-color: white; color: #4c4c4c; font-family: Helvetica, &amp;quot;Trebuchet MS&amp;quot;, Trebuchet, Verdana, sans-serif; font-size: 13px;"&gt;Enjoy,&lt;/span&gt;&lt;br style="background-color: white; color: #4c4c4c; font-family: Helvetica, &amp;quot;Trebuchet MS&amp;quot;, Trebuchet, Verdana, sans-serif; font-size: 13px;" /&gt;&lt;span style="background-color: white; color: #4c4c4c; font-family: Helvetica, &amp;quot;Trebuchet MS&amp;quot;, Trebuchet, Verdana, sans-serif; font-size: 13px;"&gt;The Infinispan Team&lt;/span&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/Infinispan/~4/We8q9d94wWA" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/ek2EkhURueA" height="1" width="1" alt=""/&gt;</content><summary>Infinispan users, We have just released 9.3.0.Beta1 which includesÂ 38 fixes. Highlights of this release include: Conflict Resolution Improvements MergePolicy.NONE is now the default merge-policy Conflict Resolution during a merge is now non-blocking and tolerant of node failures Reactive Streams based Cache Loader SPI available Infinispan can now be built and tested with Java 10/11 Max Idle expira...</summary><dc:creator>Tristan Tarrant</dc:creator><dc:date>2018-05-11T16:07:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/Infinispan/~3/We8q9d94wWA/infinispan-930beta1.html</feedburner:origLink></entry><entry><title>VMWare vijava - The curious case of "incorrect user name or password" exception</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/5eEQyRaYZsQ/vmware-vijava-curious-case-of-incorrect.html" /><category term="feed_group_name_jbossas" scheme="searchisko:content:tags" /><category term="feed_name_mywiki" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="vijava" scheme="searchisko:content:tags" /><category term="vmware" scheme="searchisko:content:tags" /><category term="yavijava" scheme="searchisko:content:tags" /><author><name>jaikiran pai</name></author><id>searchisko:content:id:jbossorg_blog-vmware_vijava_the_curious_case_of_incorrect_user_name_or_password_exception</id><updated>2018-05-11T15:18:49Z</updated><published>2018-05-11T15:18:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;In one of the projects I have been involved in, we use &lt;a href="http://www.yavijava.com/"&gt;yavijava&lt;/a&gt; (which is a fork of &lt;a href="https://sourceforge.net/p/vijava/"&gt;vijava&lt;/a&gt;) library to interact with vCenter which hosts our VMs. vCenter exposes various APIs through their webservice endpoints which are invoked through HTTP(s). The yavijava library has necessary hooks which allows developers to use a HTTP client library of their choice on the client side to handle invocations to the vCenter.&lt;br /&gt;&lt;br /&gt;In our integration, we plugged in the &lt;a href="https://hc.apache.org/httpcomponents-client-ga/"&gt;Apache HTTP client library&lt;/a&gt;, so that the yavijava invocations internally end up using this HTTP library for interaction. Things mostly worked fine and we were able to invoke the vCenter APIs. I say mostly, because every once in a while we kept seeing exceptions like:&lt;br /&gt;&lt;br /&gt;InvalidLogin : Cannot complete login due to an incorrect user name or password.&lt;br /&gt;&lt;br /&gt;This was puzzling since we were absolutely sure that the user name and password we use to interact with the vCenter was correct. Especially since all of the previous calls were going through fine, before we started seeing these exceptions.&lt;br /&gt;&lt;br /&gt;The exception stacktrace didn't include anything more useful and neither did any other logs. So the only option that I was left with was to go look into the vCenter (server side) event logs to see if I can find something. Luckily, I had access to a setup which had a vSphere client, which I then used to connect to the vCenter. The vSphere client allows you to view the event logs that were generated on the vCenter.&lt;br /&gt;&lt;br /&gt;Taking a look at the logs, showed something interesting and useful. Every time, we had run into this "incorrect user name or password" exception on the client side, there was a corresponding event log on the vCenter server side at INFO level which stated "user cannot logon since user is already logged on". That event log was a good enough hint to give an idea of what might be happening.&lt;br /&gt;&lt;br /&gt;Based on that hint, the theory I could form was, somehow for an incoming (login) request, vCenter server side notices something on the request which gives it an impression that the user is already logged in. Given my background with Java EE technologies, the immediate obvious thing that came to mind was that the request was being attached with a "Cookie" which the server side uses to associate requests against a particular session. Since I had access to the client side code which was issuing this login request, I was absolutely sure that the request did not have any explicitly set Cookie header. So that raised the question, who/where the cookie was being associated with the request. The only place that can happen, if it's not part of the request we issued, is within the HTTP client library. Reading up the documentation of Apache HTTP client library confirmed the theory that the HTTP client was automagically associating a (previously generated) Cookie against the request. &lt;br /&gt;&lt;br /&gt;More specifically, the HTTP client library uses pooled connections. When a request is made, one of the pooled connections (if any) gets used. What was happening in this particular case&amp;nbsp; was that, a previous login would pick up connection C1 and the login would succeed. The response returned from vCenter for that login request would include a Cookie set in the response header. The Apache HTTP client library was then keeping track of this Cookie against the connection that was used. Now when a subsequent login request arrived, if the same pooled connection C1 gets used for this request, then the HTTP client library was attaching the Cookie that it kept track against this connection C1, to this new request. As a result, vCenter server side ends up seeing that the incoming login request has a Cookie associated with it, which says that there's already a logged in session for that request. Hence, that INFO message in the event logs of vCenter. Of course, the error returned isn't that informative and in fact a bit misleading since it says the username/password is incorrect.&lt;br /&gt;&lt;br /&gt;Now that we know what's going on, the solution was pretty straightforward. Apache HTTP client library allows you to configure Cookie policy management. Since in our case, we wanted to handle setting the Cookie explicitly on the request, we decided to go with the "ignoreCookies" policy which can be configured on the HTTP client. More about this can be found in the &lt;a href="https://hc.apache.org/httpclient-3.x/cookies.html"&gt;HTTP client library documentation&lt;/a&gt; (see the "Manual Handling of Cookies" section). Once we did this change, we no longer saw this exception anymore.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;There isn't much information about this issue anywhere that I could find. The closest I could find was this forum thread &lt;a href="https://sourceforge.net/p/vijava/discussion/826592/thread/91550e2a/"&gt;https://sourceforge.net/p/vijava/discussion/826592/thread/91550e2a/&lt;/a&gt;. It didn't have a conclusive solution, but it does appear that it's the same issue that the user there was running into (almost 7 years back!)&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/5eEQyRaYZsQ" height="1" width="1" alt=""/&gt;</content><summary>In one of the projects I have been involved in, we use yavijava (which is a fork of vijava) library to interact with vCenter which hosts our VMs. vCenter exposes various APIs through their webservice endpoints which are invoked through HTTP(s). The yavijava library has necessary hooks which allows developers to use a HTTP client library of their choice on the client side to handle invocations to t...</summary><dc:creator>jaikiran pai</dc:creator><dc:date>2018-05-11T15:18:00Z</dc:date><feedburner:origLink>http://jaitechwriteups.blogspot.com/2018/05/vmware-vijava-curious-case-of-incorrect.html</feedburner:origLink></entry><entry><title>âUse the dynamic tracing tools, Lukeâ</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/S6gEIllbXaE/" /><category term="Developer Tools" /><category term="Red Hat Enterprise Linux" /><category term="Ruby" /><category term="debugging" /><category term="RHEL" /><category term="ruby" /><category term="Ruby MRI" /><category term="systemtap" /><category term="trace" /><category term="tracing" /><author><name>William Cohen</name></author><id>https://developers.redhat.com/blog/?p=491567</id><updated>2018-05-11T11:00:54Z</updated><published>2018-05-11T11:00:54Z</published><content type="html">&lt;p&gt;A common refrain for tracking down issues on computer systems running open source software is &amp;#8220;Use the source, Luke.&amp;#8221; Reviewing the source code can be helpful in understanding how the code works, but the static view may not give you a complete picture of how things work (or are broken) in the code. The paths taken through code are heavily data dependent. Without knowledge about specific values at key locations in code, you can easily miss what is happening. Dynamic instrumentation tools, such as SystemTap, that trace and instrument the software can help provide a more complete understanding of what the code is actually doing&lt;/p&gt; &lt;p&gt;I have wanted to better understand how the Ruby interpreter works. This is an opportunity to use SystemTap to investigate Ruby MRI internals on Red Hat Enterprise Linux 7. The article &lt;a href="https://access.redhat.com/solutions/5441" target="_blank" rel="noopener"&gt;What is SystemTap and how to use it?&lt;/a&gt; has more information about installing SystemTap. The x86_64 RHEL 7 machine has &lt;code&gt;ruby-2.0.0648-33.el7_4.x86_64.rpm&lt;/code&gt; installed, so the matching &lt;code&gt;debuginfo&lt;/code&gt; RPM is installed to provide SystemTap with information about function parameters and to provide me with human-readable source code. The &lt;code&gt;debuginfo&lt;/code&gt; RPM is installed by running the following command as root:&lt;span id="more-491567"&gt;&lt;/span&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;# debuginfo-install ruby -y&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The first thing I notice is the Ruby command &lt;code&gt;/usr/bin/ruby&lt;/code&gt; is very small, less than 8K bytes in size:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ ls -l /usr/bin/ruby -rwxr-xr-x. 1 root root 7184 Feb 19 07:12 /usr/bin/ruby&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The actual interpreter must be located elsewhere. I look through the shared libraries used by &lt;code&gt;/usr/bin/ruby&lt;/code&gt; and find &lt;code&gt;libruby.so.2.0&lt;/code&gt; as a likely home of the Ruby interpreter:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ ldd /usr/bin/ruby linux-vdso.so.1 =&amp;#62; (0x00007ffc11076000) libruby.so.2.0 =&amp;#62; /lib64/libruby.so.2.0 (0x00007f8a62a1a000) libpthread.so.0 =&amp;#62; /lib64/libpthread.so.0 (0x00007f8a627fe000) librt.so.1 =&amp;#62; /lib64/librt.so.1 (0x00007f8a625f6000) libdl.so.2 =&amp;#62; /lib64/libdl.so.2 (0x00007f8a623f2000) libcrypt.so.1 =&amp;#62; /lib64/libcrypt.so.1 (0x00007f8a621bb000) libm.so.6 =&amp;#62; /lib64/libm.so.6 (0x00007f8a61eb9000) libc.so.6 =&amp;#62; /lib64/libc.so.6 (0x00007f8a61aec000) /lib64/ld-linux-x86-64.so.2 (0x00007f8a62e77000) libfreebl3.so =&amp;#62; /lib64/libfreebl3.so (0x00007f8a618e9000) &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;We can list out the all the functions in the shared library that SystemTap can probe using the wildcard &lt;code&gt;"*"&lt;/code&gt;Â to match all function names:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ stap -l 'process("/lib64/libruby.so.2.0").function("*")'&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;There are over 5600 functions visible to SystemTap in the Ruby MRI interpreter. Instrumenting all of these functions is probably going to give us information overload. Also, SystemTap checks to see how much overhead its instrumentation introduces into the code and will stop if it is causing too much overhead. Let&amp;#8217;s reduce the scope and just look at how Ruby&amp;#8217;s arbitrary precision arithmetic works. The following shows the 125 various functions associated with &lt;code&gt;bignum&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ stap -l 'process("/lib64/libruby.so.2.0").function("*")'|grep "bignum"&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Below, is a single line of the output from the &lt;code&gt;stap -l&lt;/code&gt; command above for the function &lt;code&gt;rb_cstr_to_inum&lt;/code&gt; in the Ruby MRI shared library &lt;code&gt;/usr/lib64/libruby.so.2.0.0&lt;/code&gt;. This line has additional information following the function name after the &lt;code&gt;@&lt;/code&gt; sign: the source file and line number for this function.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;process("/usr/lib64/libruby.so.2.0.0").function("rb_cstr_to_inum@/usr/src/debug/ruby-2.0.0-p648/bignum.c:579")&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;As mentioned earlier, the Ruby &lt;code&gt;debuginfo&lt;/code&gt; provides the &lt;code&gt;bignum.c&lt;/code&gt; source file. Loading that file in the editor and going to line 579 shows the start of that function:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;VALUE rb_cstr_to_inum(const char *str, int base, int badcheck) { const char *s = str; char *end; char sign = 1, nondigit = 0; int c; ...&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The SystemTap wildcard can be specified to limit the matching to just functions in the &lt;code&gt;bignum.c&lt;/code&gt; file, as shown below:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ stap -l 'process("/lib64/libruby.so.2.0").function("*@*/bignum.c")'&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now, with armed with this collection of probe-able functions, we can look at how the arbitrary precision arithmetic operates using the SystemTap example script &lt;code&gt;para-callgraph.stp&lt;/code&gt; in &lt;code&gt;/usr/share/systemtap/examples/general/para-callgraph.stp&lt;/code&gt;. Ruby source code has a sample program,Â &lt;code&gt;pi.rb&lt;/code&gt;, that computes the digits of pi using the arbitrary precision arithmetic.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ more pi.rb #!/usr/local/bin/ruby k, a, b, a1, b1 = 2, 4, 1, 12, 4 loop do # Next approximation p, q, k = k*k, 2*k+1, k+1 a, b, a1, b1 = a1, b1, p*a+q*a1, p*b+q*b1 # Print common digits d = a / b d1 = a1 / b1 while d == d1 print d $stdout.flush a, a1 = 10*(a%b), 10*(a1%b1) d, d1 = a/b, a1/b1 end end&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;It will run, printing out the never-ending stream of digits of pi:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ ruby pi.rb 3141592653589793238462643383279502884197169399375105820974944592 3078164062862089986280348253421170679821480865132823066470938446 0955058223172535940812848111745028410270193852110555964462294895 4930381964428810975665933446128475648233786783...&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now we can see how the arbitrary arithmetic functions operate during the program execution. The first line of the command below invokes SystemTap with the &lt;code&gt;para-callgraph.stp&lt;/code&gt; script. The second line provides the script with the information about which functions to probe. In this case, all the functions from the &lt;code&gt;bignum.c&lt;/code&gt; source file are traced. The last line of the command makes SystemTap start the &lt;code&gt;ruby&lt;/code&gt; program once all the SystemTap instrumentation has been created. The &lt;code&gt;pi.rb&lt;/code&gt; program will run endlessly. Once we have enough trace data, we can stop the program and tracing by pressing Ctrl-C.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;stap /usr/share/systemtap/examples/general/para-callgraph.stp \ 'process("/lib64/libruby.so.2.0").function("*@*/bignum.c")' \ -c "ruby pi.rb"&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Below is the start of the output. Approximately 25 digits are printed out before we see &lt;code&gt;para-callgraph.stp&lt;/code&gt; output for the call to &lt;code&gt;rb_big_resize_big&lt;/code&gt;. This might be a side effect of buffering output rather than the actual order in which things occurred. Each line of the &lt;code&gt;para-callgraph.stp&lt;/code&gt; starts with the number of microseconds elapsed from the previous line, the process name, and the PID. The &lt;code&gt;-&amp;#62;&lt;/code&gt; indicates entering a function function with its list of argument values. The &lt;code&gt;&amp;#60;-&lt;/code&gt;Â is the return from the from the function with a return value, if it has one. Nested function calls are indented.&lt;/p&gt; &lt;p&gt;At the very beginning of the program trace, we can see some initialization including a call to &lt;code&gt;Init_Bignum&lt;/code&gt;. The source for theÂ &lt;code&gt;Init_Bignum&lt;/code&gt; function show a series of calls to set up the various methods in the class using the &lt;code&gt;rb_define_method&lt;/code&gt; function, which is in a file other than &lt;code&gt;bignum.c&lt;/code&gt; and is not instrumented. Thus, there is no tracing of theÂ &lt;code&gt;rb_define_method&lt;/code&gt; function. However, there is a call to the &lt;code&gt;rb_uint2big&lt;/code&gt; function at the end of &lt;code&gt;Init_Bignum&lt;/code&gt; and this is seen in the trace. The &lt;code&gt;rb_uint2big&lt;/code&gt; source code has &lt;code&gt;bignew&lt;/code&gt; in it with two arguments in the code, but in the trace there is &lt;code&gt;bignew_1&lt;/code&gt; invoked with three arguments. Searching through the &lt;code&gt;bignum.c&lt;/code&gt; shows a &lt;code&gt;define&lt;/code&gt; that converts &lt;code&gt;bignew&lt;/code&gt; into a call to &lt;code&gt;bignew_1&lt;/code&gt; with three arguments.&lt;/p&gt; &lt;p&gt;We also see a conversion of a string with the first &lt;code&gt;rb_cstr_to_inum&lt;/code&gt;Â that is base 8 (&lt;code&gt;0x8&lt;/code&gt;) and returns &lt;code&gt;0x5&lt;/code&gt;. The next conversion by &lt;code&gt;rb_cstr_to_inum&lt;/code&gt; from strings to number is base 10 (&lt;code&gt;0xa&lt;/code&gt;) and returns &lt;code&gt;0x3&lt;/code&gt;. The source code shows that &lt;code&gt;rb_cstr_to_inum&lt;/code&gt; returns the value from &lt;code&gt;bignorm&lt;/code&gt;, but there is no trace of &lt;code&gt;bignorm&lt;/code&gt; in the trace. The compiler optimized the code by inlining &lt;code&gt;bignorm&lt;/code&gt; into &lt;code&gt;rb_cstr_to_inum&lt;/code&gt; to eliminate the cost of the function call. The values returned by &lt;code&gt;bignorm&lt;/code&gt; (and &lt;code&gt;rb_cstr_to_inum&lt;/code&gt;) use the low bit to indicate the object type (&lt;a href="http://patshaughnessy.net/2014/1/9/how-big-is-a-bignum"&gt;How Big is a Bignum?&lt;/a&gt;). In &lt;code&gt;rb_cstr_to_inum&lt;/code&gt;, the objects have the least-significant bit set indicating the values are fixed numbers.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;31415926535897932384626433 0 ruby(6049):-&amp;#62;rb_big_resize big=0x201bfb0 len=0x5 5 ruby(6049):rb_big_norm x=0x201bfb0 2 ruby(6049): -&amp;#62;bignorm x=0x201bfb0 4 ruby(6049): -&amp;#62;rb_big_resize big=0x201bfb0 len=0x4 7 ruby(6049): &amp;#60;-rb_big_resize 8 ruby(6049): &amp;#60;-bignorm return=0x201bfb0 9 ruby(6049):Init_Bignum 25 ruby(6049): -&amp;#62;rb_uint2big n=0x3 28 ruby(6049): -&amp;#62;bignew_1 klass=0x20168a8 len=0x2 sign=0x1 31 ruby(6049): &amp;#60;-bignew_1 return=0x2016858 33 ruby(6049): &amp;#60;-rb_uint2big return=0x2016858 36 ruby(6049):rb_uint2big n=0xffffffffffffffff 4 ruby(6049): -&amp;#62;bignew_1 klass=0x20168a8 len=0x2 sign=0x1 6 ruby(6049): &amp;#60;-bignew_1 return=0x200b4a8 8 ruby(6049):rb_cstr_to_inum str=0x2122390 base=0x8 badcheck=0x0 6 ruby(6049):rb_cstr_to_inum str=0x2122390 base=0xa badcheck=0x0 3 ruby(6049):&amp;#60;-rb_cstr_to_inum return=0x3 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Earlier examination of the &lt;code&gt;Init_Bignum&lt;/code&gt; function code showed that the &lt;code&gt;/&lt;/code&gt; (divide) method is performed by theÂ &lt;code&gt;rb_big_div&lt;/code&gt; function. Since &lt;code&gt;pi.rb&lt;/code&gt; performs division, there should be calls to &lt;code&gt;rb_big_div&lt;/code&gt;. A bit later in the trace output, there is an example of a divide operation on arbitrary precision arithmetic by the &lt;code&gt;rb_big_div&lt;/code&gt; function. It calls &lt;code&gt;rb_big_divide&lt;/code&gt; with the argument &lt;code&gt;op=0x2f&lt;/code&gt;, an ASCII character &lt;code&gt;/&lt;/code&gt;. The trace shows an argument needed to be converted to the proper class with a call to &lt;code&gt;rb_int2big&lt;/code&gt; before passing the values to &lt;code&gt;bigdivmod&lt;/code&gt;. The &lt;code&gt;bigdivrem&lt;/code&gt; and &lt;code&gt;bigdivrem1&lt;/code&gt; functions do the actual division. Once the divide operation is done, another normalization is done by the &lt;code&gt;bignorm&lt;/code&gt; function to determine how large the result is and size the storage appropriately. In this particular case, the value (&lt;code&gt;0xb&lt;/code&gt;) has the low bit set indicating the value is a fixed number with the numerical value coded in the remaining bits of the return value.&lt;/p&gt; &lt;pre&gt;&lt;code&gt; 0 ruby(6049):-&amp;#62;rb_big_div x=0x238abd8 y=0x63c25f1981ac4201 3 ruby(6049): -&amp;#62;rb_big_divide x=0x238abd8 y=0x63c25f1981ac4201 op=0x2f 6 ruby(6049): -&amp;#62;rb_int2big n=0x31e12f8cc0d62100 8 ruby(6049): -&amp;#62;rb_uint2big n=0x31e12f8cc0d62100 11 ruby(6049): -&amp;#62;bignew_1 klass=0x20168a8 len=0x2 sign=0x1 13 ruby(6049): &amp;#60;-bignew_1 return=0x238abb0 15 ruby(6049): &amp;#60;-rb_uint2big return=0x238abb0 16 ruby(6049): bigdivmod x=0x238abd8 y=0x238abb0 divp=0x7fff57542938 modp=0x0 22 ruby(6049): -&amp;#62;bigdivrem x=0x238abd8 y=0x238abb0 divp=0x7fff57542938 modp=0x7fff575428e8 24 ruby(6049): -&amp;#62;bignew_1 klass=0x20168a8 len=0x4 sign=0x1 27 ruby(6049): rb_big_clone x=0x238abb0 31 ruby(6049): -&amp;#62;bignew_1 klass=0x20168a8 len=0x2 sign=0x1 34 ruby(6049): &amp;#60;-bignew_1 return=0x238ab60 36 ruby(6049): bigdivrem1 ptr=0x7fff57542860 41 ruby(6049): rb_big_clone x=0x238ab88 45 ruby(6049): -&amp;#62;bignew_1 klass=0x20168a8 len=0x4 sign=0x1 47 ruby(6049): &amp;#60;-bignew_1 return=0x238ab38 48 ruby(6049): rb_big_clone x=0x238ab88 62 ruby(6049): -&amp;#62;bignew_1 klass=0x20168a8 len=0x4 sign=0x1 64 ruby(6049): &amp;#60;-bignew_1 return=0x238ab10 66 ruby(6049): &amp;#60;-rb_big_clone return=0x238ab10 67 ruby(6049): &amp;#60;-bigdivrem return=0x238ab88 69 ruby(6049): bignorm x=0x238ab38 82 ruby(6049): &amp;#60;-bignorm return=0xb 84 ruby(6049): &amp;#60;-rb_big_divide return=0xb 85 ruby(6049):&amp;#60;-rb_big_div return=0xb&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;As a result of this little exercise, I have a bit better understanding of how the Ruby interpreter handles arbitrary arithmetic. This same technique can be used to trace out the execution of other parts of Ruby MRI (or any other complicated piece of software) to better understand how it operates.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F11%2Fuse-the-dynamic-tracing-tools-luke%2F&amp;#38;linkname=%E2%80%9CUse%20the%20dynamic%20tracing%20tools%2C%20Luke%E2%80%9D" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F11%2Fuse-the-dynamic-tracing-tools-luke%2F&amp;#38;linkname=%E2%80%9CUse%20the%20dynamic%20tracing%20tools%2C%20Luke%E2%80%9D" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F11%2Fuse-the-dynamic-tracing-tools-luke%2F&amp;#38;linkname=%E2%80%9CUse%20the%20dynamic%20tracing%20tools%2C%20Luke%E2%80%9D" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F11%2Fuse-the-dynamic-tracing-tools-luke%2F&amp;#38;linkname=%E2%80%9CUse%20the%20dynamic%20tracing%20tools%2C%20Luke%E2%80%9D" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F11%2Fuse-the-dynamic-tracing-tools-luke%2F&amp;#38;linkname=%E2%80%9CUse%20the%20dynamic%20tracing%20tools%2C%20Luke%E2%80%9D" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F11%2Fuse-the-dynamic-tracing-tools-luke%2F&amp;#38;linkname=%E2%80%9CUse%20the%20dynamic%20tracing%20tools%2C%20Luke%E2%80%9D" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F11%2Fuse-the-dynamic-tracing-tools-luke%2F&amp;#38;linkname=%E2%80%9CUse%20the%20dynamic%20tracing%20tools%2C%20Luke%E2%80%9D" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F11%2Fuse-the-dynamic-tracing-tools-luke%2F&amp;#38;linkname=%E2%80%9CUse%20the%20dynamic%20tracing%20tools%2C%20Luke%E2%80%9D" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F11%2Fuse-the-dynamic-tracing-tools-luke%2F&amp;#38;title=%E2%80%9CUse%20the%20dynamic%20tracing%20tools%2C%20Luke%E2%80%9D" data-a2a-url="https://developers.redhat.com/blog/2018/05/11/use-the-dynamic-tracing-tools-luke/" data-a2a-title="âUse the dynamic tracing tools, Lukeâ"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/05/11/use-the-dynamic-tracing-tools-luke/"&gt;&amp;#8220;Use the dynamic tracing tools, Luke&amp;#8221;&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/S6gEIllbXaE" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;A common refrain for tracking down issues on computer systems running open source software is &amp;#8220;Use the source, Luke.&amp;#8221; Reviewing the source code can be helpful in understanding how the code works, but the static view may not give you a complete picture of how things work (or are broken) in the code. The paths [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/05/11/use-the-dynamic-tracing-tools-luke/"&gt;&amp;#8220;Use the dynamic tracing tools, Luke&amp;#8221;&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/05/11/use-the-dynamic-tracing-tools-luke/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">491567</post-id><dc:creator>William Cohen</dc:creator><dc:date>2018-05-11T11:00:54Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/05/11/use-the-dynamic-tracing-tools-luke/</feedburner:origLink></entry></feed>
